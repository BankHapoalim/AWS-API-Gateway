{"version":3,"sources":["services/get-fragments.js","services/api.js","pages/Home.jsx","pages/GettingStarted.jsx","services/state.js","services/api-catalog.js","services/misc.js","pages/Dashboard.jsx","services/self.js","components/ApisMenu.jsx","components/SwaggerUiLayout.jsx","pages/Apis.jsx","pages/Admin/Admin.jsx","pages/Admin/SideNav.jsx","pages/Admin/ApiManagement.jsx","components/AlertPopup.jsx","components/Register.jsx","components/NavBar.jsx","services/feedback.js","components/Feedback.jsx","index.js"],"names":["fragments","observable","loadHtml","path","fragment","jsx","fetch","then","response","text","parsedMarkdown","frontmatter","Object","objectSpread","react_default","a","createElement","with_html_default","escapeHtml","source","body","renderers","attributes","cachedClient","link","_ref","href","props","objectWithoutProperties","test","assign","target","rel","Link","to","HomePage","observer","Fragment","Segment","vertical","textAlign","style","color","backgroundColor","padding","margin","Image","centered","size","src","Header","as","Home","header","tagline","Button","positive","gettingStartedButton","apiListButton","Container","fluid","GettingStarted","awsRegion","window","config","region","cognitoRegion","cognitoUserPoolId","userPoolId","cognitoIdentityPoolId","identityPoolId","cognitoClientId","userPoolClientId","cognitoDomain","userPoolDomain","initApiGatewayClient","arguments","length","undefined","accessKeyId","secretAccessKey","sessionToken","apigClientFactory","newClient","accessKey","secretKey","apigw","apiGatewayClient","Promise","resolve","poller","setInterval","clearInterval","AWS","store","api","apiKey","apiList","loaded","apiGateway","generic","cognitoUser","usagePlans","subscriptions","initialize","this","clear","reset","_this","defaults","_len","keys","Array","_key","forEach","key","_","set","get","resetUserData","reactTo","triggerFn","effectFn","reaction","data","action","usagePlan","usagePlanId","subscribed","id","find","sub","apis","updateSubscriptionStatus","concat","logo","specificLogo","stage","headers","Accept","redirect","ok","fetchApiImage","catalogPromiseCache","subscriptionsPromiseCache","apiKeyPromiseCache","updateUsagePlansAndApisList","_ref$data","reduce","acc","cloneDeep","catch","getApi","apiId","selectIt","thisApi","allApis","toString","updateSubscriptions","bustCache","subscriptionsOrPromise","_ref2","updateApiKey","apiKeyOrPromise","_ref3","value","mapUsageByDate","usage","usedOrRemaining","dates","items","apiKeyId","apiKeyUsage","startDate","apiKeyDate","Date","isArray","map","date","setDate","getDate","item","toConsumableArray","mapApiKeyUsageByDate","dailyUsage","used","remaining","sort","parseInt","toTitleCase","string","firstLetter","allOtherLetters","slice","toUpperCase","toLowerCase","loadUsage","canvasId","start","getFullYear","getMonth","toJSON","split","end","fetchUsage","result","ctx","document","getElementById","JSON","stringify","labels","d","toLocaleDateString","weekday","year","month","day","max","Math","apply","chartConfig","type","datasets","label","quota","period","lineTension","borderColor","pointBackgroundColor","pointBorderColor","borderWidth","pointRadius","pointHoverRadius","options","scales","yAxes","ticks","beginAtZero","suggestedMax","Chart","error","console","userPool","Grid","container","Row","Column","paddingTop","background","border","borderRadius","Divider","filter","index","width","widescreen","marginBottom","Dashboard_Title","throttle","Message","info","rateLimit","burstLimit","content","Loader","active","Title","firstApiName","swagger","title","List","Item","extraApiCount","Popup","trigger","cursor","on","position","poolData","UserPoolId","ClientId","isAuthenticated","isAdmin","jwt_decode","signInUserSession","idToken","jwtToken","includes","login","email","password","reject","location","hash","accessToken","username","replace","param","CognitoUser","Username","Pool","CognitoUserPool","localStorage","setItem","setCredentials","authenticationDetails","AuthenticationDetails","Password","authenticateUser","onSuccess","onFailure","preferred_role","params","IdentityPoolId","Logins","defineProperty","RoleArn","credentials","CognitoIdentityCredentials","refresh","all","updateAllUserData","post","logout","signOut","protocol","host","isActive","selectedApiId","selectedStage","loadingApis","hasGatewayApis","hasGenericApis","Menu","inverted","attached","ApiSubsection","listOfApis","GenericApiSubsection","_ref2$selectedStage","InfoReplacement","specSelectors","basePath","externalDocs","className","display","flex","marginRight","fontWeight","version","SwaggerUiLayout_SubscriptionButtons","SubscriptionButtons","_React$Component","_getPrototypeOf2","classCallCheck","args","possibleConstructorReturn","getPrototypeOf","call","state","inherits","createClass","onClick","delete","put","React","Component","SwaggerLayoutPlugin","components","InfoContainer","ApisPage","updateApi","match","swaggerUiConfig","dom_id","plugins","supportedSubmitMethods","spec","onComplete","uiHandler","preauthorizeApiKey","SwaggerUI","errorHeader","errorBody","overflow","components_ApisMenu","icon","Icon","name","circular","Content","Admin","_Component","BrowserRouter","SideNav","src_AdminRoute","exact","component","ApiManagement","borderless","modalOpen","fileInput","createRef","uploadAPISpec","event","preventDefault","files","current","i","file","reader","FileReader","onload","f","e","log","YAML","parse","app","res","status","setState","prev","setTimeout","getApiVisibility","readAsText","deleteAPISpec","myHash","str","charCodeAt","Error","updateLocalApiGatewayApis","apisList","updatedApi","updatedApis","stateApi","visibility","_ref$apis$generic","_len2","_key2","showApiGatewayApi","hideApiGatewayApi","updateApiGatewayApi","_this2","Table","celled","collapsing","fullWidth","HeaderCell","colSpan","sorted","Body","restApiId","Cell","subscribable","basic","disabled","Modal","closeOnEscape","closeOnDimmerClick","onClose","floated","open","Form","onSubmit","Field","htmlFor","accept","multiple","ref","AlertPopup","isVisible","message","handleDismiss","hidden","negative","floating","onDismiss","Register","redirectUri","signedIn","Redirect","NavBar","getCognitoUrl","Register_Register","paddingRight","APIs","insertAuthMenu","submitFeedback","client","initialState","formOpen","feedbackSubmitted","Feedback","openModal","closeModal","handleSubmit","_this$state","closeIcon","top","right","transform","borderTopLeftRadius","borderTopRightRadius","TextArea","onChange","PureComponent","feedbackEnabled","AdminRoute","rest","Route","render","App","getCurrentUser","getSession","err","session","parsedToken","valid","getItem","exp","init","hashRoute","substring","history","pushState","components_NavBar","AlertPopup_AlertPopup","Switch","Dashboard","Apis","components_Feedback","ReactDOM","src_App"],"mappings":"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","file":"static/js/main.d57baf30.chunk.js","sourcesContent":["// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\n\n// react-router\nimport { Link } from 'react-router-dom'\n\n// mobx\nimport { observable } from 'mobx'\n\n// markdown parsing\nimport frontmatter from 'front-matter'\nimport Markdown from 'react-markdown/with-html'\n\nexport const fragments = observable({})\n\nloadHtml('/custom-content/content-fragments/GettingStarted.md', 'GettingStarted')\nloadHtml('/custom-content/content-fragments/Home.md', 'Home')\nloadHtml('/custom-content/content-fragments/APIs.md', 'APIs')\n\n/**\n * \n * Pre-load the custom-content markdown, parses its frontmatter, and renders it as JSX. This method is asynchronous and doesn't actually return anything -- instead, it acts on a MobX Observable -- the fragment. The fragment is an object with a `jsx` property that maps to the rendered component, and any number of other properties collected from the front-matter.\n * \n * @param {String} path   Path to the file to load in. Should be a markdown file.\n * @param {String} fragment   Name of the fragment. Determines where rendered data gets stored.\n * \n * @returns {Object} \n */\nfunction loadHtml(path, fragment) {\n  // if we want to display a loading indicator, this would be where\n  fragments[fragment] = { jsx: () => null }\n\n  fetch(path).then(response => response.text().then(text => {\n    let parsedMarkdown = frontmatter(text)\n\n    fragments[fragment] = {\n      jsx: () => (\n        <Markdown \n          escapeHtml={false} \n          source={parsedMarkdown.body}\n          renderers={renderers}\n        />\n      ),\n      ...parsedMarkdown.attributes\n    }\n  }))\n}\n\n/**\n * Renderers is a map of node type to component. \n * \n * In this case, we only override links. Any time react-markdown tries to render a link, it'll render this component. Normal links will work, but the cause a full page reload. We don't want that, so we can replacing them with react-router Links. However, replacing external links with react-router Links causes them to not work at all. We don't want that either, so we attempt to determine if a link is external or not, and use `Link` or `a` appropriately.\n */\nconst renderers = {\n  link: ({ href, ...props }) => {\n    // if absolute url, use an `a` tag\n    // https://stackoverflow.com/a/19709846/4060061\n    if (/^(?:[a-z]+:)?\\/\\//i.test(href))\n      return <a href={href} target=\"_blank\" rel=\"noopener noreferrer\" {...props} />\n\n    // replace links with react-router-dom tags so that they \n    return <Link to={href} {...props} />\n  }\n}","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport AWS from 'aws-sdk'\n\nexport const awsRegion = window.config.region\nexport const cognitoRegion = window.config.region\nexport const cognitoUserPoolId = window.config.userPoolId\nexport const cognitoIdentityPoolId = window.config.identityPoolId\nexport const cognitoClientId = window.config.userPoolClientId\nexport const cognitoDomain = window.config.userPoolDomain\n\nAWS.config.region = cognitoRegion\n\nlet cachedClient\n\nexport function initApiGatewayClient({ accessKeyId, secretAccessKey, sessionToken } = {}) {\n  cachedClient = window.apigClientFactory.newClient({\n    accessKey: accessKeyId,\n    secretKey: secretAccessKey,\n    sessionToken: sessionToken,\n    region: awsRegion\n  })\n\n  window.apigw = cachedClient\n}\n\nexport function apiGatewayClient() {\n  if (cachedClient) return Promise.resolve(cachedClient)\n  \n  return new Promise(resolve => {\n    const poller = setInterval(() => {\n      if (cachedClient) {\n        clearInterval(poller)\n        resolve(cachedClient)\n      }\n    }, 100)\n  })\n}\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\n\n// mobx\nimport { observer } from 'mobx-react'\n\n// fragments\nimport { fragments } from 'services/get-fragments'\n\n// react-router\nimport { Link } from 'react-router-dom'\n\n// semantic-ui\nimport { Header, Segment, Container, Image, Button } from 'semantic-ui-react'\n\nexport const HomePage = observer(() => (\n  <React.Fragment>\n    <Segment vertical textAlign='center' style={{ color: \"whitesmoke\", backgroundColor: \"slategray\", padding: \"40px 0px\", margin: \"0px !important\" }}>\n      <Image centered size='small' src='/custom-content/home-image.png' />\n      <Header as='h1' style={{ color: \"whitesmoke\" }}>{fragments.Home.header}</Header>\n      <p>{fragments.Home.tagline}</p>\n      <Link to=\"/getting-started\"><Button positive>{fragments.Home.gettingStartedButton}</Button></Link>\n      <Link to=\"/apis\" style={{ padding: \"0.78571429em 1.5em 0.78571429em\", color: \"white\" }}>{fragments.Home.apiListButton}</Link>\n    </Segment>\n    <Segment vertical style={{ padding: \"40px 0px\", margin: \"0 !important\" }}>\n      <Container fluid text textAlign='justified'>\n        <fragments.Home.jsx />\n      </Container>\n    </Segment>\n  </React.Fragment>\n))\n\nexport default HomePage\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\n\n// mobx\nimport { observer } from 'mobx-react'\n\n// fragments\nimport { fragments } from 'services/get-fragments'\n\n// semantic-ui\nimport { Container } from 'semantic-ui-react'\n\nexport default observer(() => (\n  <Container style={{ padding: \"40px\" }}>\n    <fragments.GettingStarted.jsx />\n  </Container>\n))\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { observable, reaction } from 'mobx'\nimport _ from 'lodash'\n\nimport { getSubscribedUsagePlan } from 'services/api-catalog'\n\n/**\n * A function that returns a new object contain the default store\n */\nfunction storeDefaults() {\n  return {\n    api: undefined,\n    apiKey: undefined,\n    \n    apiList: {\n      loaded: false,\n      apiGateway: [],\n      generic: []\n    },\n\n    cognitoUser: undefined,\n\n    usagePlans: [],\n\n    subscriptions: []\n  }\n}\n\n/**\n * Trick for logging the store: clone the object. i.e. _.cloneDeep(store) or JSON.parse(JSON.stringify(store))\n */\nexport const store = observable({\n  ...(storeDefaults()),\n\n  initialize() {\n    Object.assign(this, storeDefaults())\n\n    return this\n  },\n\n  /**\n   * Reset the entire store to the original values\n   */\n  clear() {\n    return this.initialize()\n  },\n\n  /**\n   * Reset specific keys on the store to their initial values\n   * \n   * @param {string[]} keys   The keys that should be reset. Accepts lodash paths. (e.g. )\n   */\n  reset(...keys) {\n    const defaults = storeDefaults()\n    keys.forEach(key =>_.set(this, key, _.get(defaults, key)))\n    return this\n  },\n\n  resetUserData() {\n    this.reset('apiKey', 'cognitoUser', 'subscriptions')\n  }\n})\n\n/**\n * \n * A short-hand function for creating reactions with protections against cyclical errors.\n * \n * @param {Function} triggerFn   A function that determines when fire the effectFn and what to pass to the effectFn.\n * @param {Function} effectFn   The side-effect to run when the data tracked by the triggerFn is changed.\n * \n * A note on MobX reactions: the side effect will \"only react to data that was accessed in the data expression\" and will only fire \"when the data returned by the expression has changed\". (https://mobx.js.org/refguide/reaction.html)\n */\nfunction reactTo(triggerFn, effectFn) {\n  // note -- had issues with cyclical reactions in the past\n  // the comments below will fix them if they come up again\n  // DO NOT REMOVE THEM\n\n  // function restartReaction() {\n    reaction(\n      triggerFn,\n      (data, action) => {\n        // action.dispose() // clear this \"listener\" so we don't cycle\n        \n        effectFn(data, action)\n\n        // restartReaction() // restart the reaction after doing stuff to the data\n      }\n    )\n  // }\n\n  // restartReaction()\n}\n\nreactTo(\n  () => ({ subscriptions: store.subscriptions, usagePlans: store.usagePlans }),\n  ({ usagePlans }) => {\n    updateSubscriptionStatus(usagePlans)\n  }\n)\n\nreactTo(\n  () => [].concat(store.apiList.apiGateway, store.apiList.generic),\n  apiList => {\n    fetchApiImage(apiList)\n  }\n)\n\n/**\n * \n */\nfunction fetchApiImage(apiList) {\n  apiList.forEach(api => {\n    if (!api.logo) {\n      let specificLogo = `/custom-content/api-logos/${api.id}_${api.stage}.png`\n  \n      // fetch automatically follows redirects; setting redirect to `manual` prevents this\n      // we need to prevent it so that we can accurately determine if the image exists\n      fetch(specificLogo, { headers: { Accept: \"image/png\" }, redirect: \"manual\" }).then(response => {\n        if (response.ok)\n          api.logo = specificLogo\n\n        else api.logo = '/custom-content/api-logos/default.png'\n      })\n    }\n  })\n}\n\n/**\n * A helper function that simple re-builds the subscribed status for each api in the catalog.\n * \n * Should be run every time either the catalog updates or the \n */\nfunction updateSubscriptionStatus(usagePlans) {\n  if (usagePlans)\n    usagePlans.forEach(usagePlan => {\n      let subscribed = !!getSubscribedUsagePlan(usagePlan.id)\n      usagePlan.subscribed = subscribed\n\n      usagePlan.apis.forEach(api => api.subscribed = subscribed)\n    })\n}\n\nexport default store.initialize()\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport _ from 'lodash'\n\nimport { apiGatewayClient } from './api'\nimport { store } from './state'\n\n/* Catalog and API Utils */\n\n/**\n * \n * Does all operations to get user data at once.\n * \n * @param {Boolean} bustCache=true   Ignore the cache and re-make the calls? Defaults to true.\n */\nexport function updateAllUserData(bustCache = true) {\n  return Promise.all([\n    updateUsagePlansAndApisList(bustCache),\n    updateSubscriptions(bustCache),\n    updateApiKey(bustCache)\n  ])\n}\n\n/**\n * \n * Update the catalog for the current user. Both request and response are cached, so unless the cache is busted, this should only ever make one network call.\n * \n * @param {Boolean} [bustCache=false]   Ignore the cache and re-make the network call. Defaults to false.\n * \n */\nexport function updateUsagePlansAndApisList(bustCache = false) {\n  // if we've already tried, just return that promise\n  if (!bustCache && catalogPromiseCache) return catalogPromiseCache\n\n  return catalogPromiseCache = apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.get('/catalog', {}, {}, {}))\n    .then(({ data = [] }) => {\n      store.usagePlans = data.apiGateway\n      store.apiList = {\n        loaded: true,\n        apiGateway: getApiGatewayApisFromUsagePlans(store.usagePlans), // MUST create\n        generic: data.generic\n      }\n    })\n    .catch(() => {\n      store.usagePlans = null\n      store.apiList = {\n        loaded: true,\n        apiGateway: [],\n        generic: []\n      }\n    })\n}\nlet catalogPromiseCache // WARNING: Don't touch this. Should only be used by updateCatalogAndApisList.\n\n/**\n * A function that takes an input usage plans and creates an list of apis out of it.\n * \n * - Makes sure each api has a non-recursive 'usagePlan' object\n * \n * returns an array of apis\n */\nfunction getApiGatewayApisFromUsagePlans(usagePlans) {\n  return usagePlans.reduce((acc, usagePlan) => {\n\n    usagePlan.apis.forEach(api => {\n      api.usagePlan = _.cloneDeep(usagePlan)\n      // remove the apis from the cloned usagePlan so we don't go circular\n      delete api.usagePlan.apis\n    })\n\n    return acc.concat(usagePlan.apis)\n  }, [])\n}\n\n/**\n * Return the API with the provided apiId. Can also provide the special strings \"FIRST\" or \"ANY\" to get the first API returned. Can select the api returned as a side-effect.\n * \n * @param {String} apiId   An apiId or the special strings 'FIRST' or 'ANY'. 'FIRST' and 'ANY' both return the first api encountered.\n * @param {Boolean} [selectIt=false]   If true, sets the found API as the current 'selected' API.\n */\nexport function getApi(apiId, selectIt = false,  stage) {\n  return updateUsagePlansAndApisList()\n    .then(() => {\n      let thisApi\n\n      let allApis = [].concat(store.apiList.apiGateway, store.apiList.generic)\n  \n      if (allApis.length) {\n        if (apiId === 'ANY' || apiId === 'FIRST') {\n          thisApi = allApis[0]\n        } else {\n          thisApi = allApis.find(api => api.id.toString() === apiId)\n        }\n\n        if (stage) {\n          thisApi = store.apiList.apiGateway.find(api => api.id.toString() === apiId && api.stage === stage)\n        }\n      }\n\n      if (selectIt) store.api = thisApi\n\n      return thisApi\n    })\n}\n\n/* Subscription Utils */\n\n/**\n * Fetch and update subscriptions store. Uses caching to determine if it should actually fetch or return the stored result.\n * \n * @param {Boolean} [bustCache=false]   Ignore the cache and re-make the network call. Defaults to false.\n */\nexport function updateSubscriptions(bustCache = false) {\n  let subscriptionsOrPromise = store.subscriptions.length ? store.subscriptions : subscriptionsPromiseCache\n  if (!bustCache && subscriptionsOrPromise) return Promise.resolve(subscriptionsOrPromise)\n\n  return subscriptionsPromiseCache = apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.get('/subscriptions', {}, {}, {}))\n    .then(({ data }) => (store.subscriptions = data))\n}\nlet subscriptionsPromiseCache // WARNING: Don't touch this. Should only be used by updateCatalogAndApisList.\n\nexport function getSubscribedUsagePlan(usagePlanId) {\n  return store.subscriptions.find(sub => sub.id === usagePlanId)\n}\n\nexport function subscribe(usagePlanId) {\n  return apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.put('/subscriptions/' + usagePlanId, {}, {}))\n    .then(() => updateSubscriptions(true))\n}\n\nexport function unsubscribe(usagePlanId) {\n  return apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.delete(`/subscriptions/${usagePlanId}`, {}, {}))\n    .then(() => updateSubscriptions(true))\n}\n\n/**\n * \n * Fetches and updates the apiKey in the store. Both request and response are cached, so unless the cache is busted, this should only ever make one network call.\n * \n */\nexport function updateApiKey(bustCache) {\n  let apiKeyOrPromise = store.apiKey ? store.apiKey : apiKeyPromiseCache\n  if (!bustCache && apiKeyOrPromise) return Promise.resolve(apiKeyOrPromise)\n\n  return apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.get('/apikey', {}, {}, {}))\n    .then(({data}) => (store.apiKey = data.value))\n}\nlet apiKeyPromiseCache\n\nexport function fetchUsage(usagePlanId) {\n  const date = new Date()\n  const start = new Date(date.getFullYear(), date.getMonth(), 1).toJSON().split('T')[0]\n  const end = date.toJSON().split('T')[0]\n  return apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.get('/subscriptions/' + usagePlanId + '/usage', { start, end }, {}))\n}\n\nexport function mapUsageByDate(usage, usedOrRemaining) {\n  const dates = {}\n  Object.keys(usage.items).forEach(apiKeyId => {\n    const apiKeyUsage = mapApiKeyUsageByDate(usage.items[apiKeyId], usage.startDate, usedOrRemaining)\n\n    // handles the bizarre case that the user has more than one api key\n    // currently not possible (and my never be), so we probably don't need it\n    apiKeyUsage.forEach(dailyUsage => {\n      const date = dailyUsage[0]\n      const used = dailyUsage[1]\n      const remaining = dailyUsage[2]\n      \n      if (!dates[date])\n      dates[date] = { used: 0, remaining: 0 }\n\n      dates[date].used += used\n      dates[date].remaining += remaining\n    })\n  })\n  \n  const usageByDate = Object.keys(dates).sort().map(date => [\n    parseInt(date, 10), \n    dates[date].used, \n    dates[date].remaining \n  ])\n  \n  return usageByDate\n}\n\nfunction mapApiKeyUsageByDate(apiKeyUsage, startDate) {\n  const apiKeyDate = new Date(startDate)\n  \n  if (apiKeyUsage && !Array.isArray(apiKeyUsage[0]))\n    apiKeyUsage = [apiKeyUsage]\n  \n  return apiKeyUsage.map((usage) => {\n    const date = apiKeyDate.setDate(apiKeyDate.getDate())\n    const item = [date, ...usage]\n    apiKeyDate.setDate(apiKeyDate.getDate() + 1)\n    return item\n  })\n}\n\n/* Marketplace integration */\n\nexport function confirmMarketplaceSubscription(usagePlanId, token) {\n  if (!usagePlanId) {\n    return\n  }\n  \n  return apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.put('/marketplace-subscriptions/' + usagePlanId, {}, {\"token\" : token}))\n}","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nexport function getQueryString() {\n  const { search: q } = window.location\n\n  if (!q) return {}\n\n  return (/^[?#]/.test(q) ? q.slice(1) : q)\n    .split('&')\n    .reduce((params, param) => {\n      let [key, value] = param.split('=');\n      params[key] = value ? decodeURIComponent(value) : '';\n      return params;\n    }, {})\n}\n\nexport function toTitleCase(string) {\n  let firstLetter = string[0]\n  let allOtherLetters = string.slice(1)\n\n  return firstLetter.toUpperCase() + allOtherLetters.toLowerCase()\n}\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\n\nimport { Grid, Header, Popup, Loader, Message, List, Divider } from 'semantic-ui-react'\n\nimport Chart from 'chart.js'\nimport { fetchUsage, mapUsageByDate } from 'services/api-catalog'\nimport { toTitleCase } from 'services/misc'\n\nimport { observer } from 'mobx-react'\n\nimport { store } from 'services/state'\n\nimport _ from 'lodash'\n\nfunction loadUsage(usagePlan, canvasId) {\n  fetchUsage(usagePlan.id)\n    .then((result) => {\n      const data = mapUsageByDate(result.data, 'used')\n      const ctx = document.getElementById(canvasId)\n\n      let oldDataString = JSON.stringify(_.get(usagePlan, 'usage.data', {}))\n      let newDataString = JSON.stringify(data)\n\n      if (oldDataString !== newDataString)\n        usagePlan.usage = { data }\n\n      const labels = data.map(d => new Date(d[0]).toLocaleDateString('en-US', { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' }))\n      const used = data.map(d => d[1])\n      const remaining = data.map(d => d[2])\n      const max = Math.max(...used, ...remaining)\n\n      const chartConfig = {\n        type: 'line',\n        data: {\n          labels,\n          datasets: [\n            {\n              label: `Requests used` + (usagePlan.quota ? ` (per ${toTitleCase(usagePlan.quota.period)})` : ''),\n              data: used,\n              lineTension: 0,\n              backgroundColor: '#00bfff',\n              borderColor: '#00bfff',\n              pointBackgroundColor: 'transparent',\n              pointBorderColor: 'transparent',\n              borderWidth: 2,\n              pointRadius: 10,\n              pointHoverRadius: 10\n\n            },\n            {\n              label: `Remaining requests` + (usagePlan.quota ? ` (per ${toTitleCase(usagePlan.quota.period)})` : ''),\n              data: remaining,\n              lineTension: 0,\n              backgroundColor: 'transparent',\n              borderColor: 'red',\n              pointBackgroundColor: 'transparent',\n              pointBorderColor: 'transparent',\n              borderWidth: 2,\n              pointRadius: 10,\n              pointHoverRadius: 10\n            }\n          ]\n        },\n        options: { \n          scales: { yAxes: [ { ticks: {\n            beginAtZero: true,\n            suggestedMax: max + (max * 0.02)\n          } } ] }\n        }\n      }\n\n      new Chart(ctx, chartConfig)\n    })\n    .catch((error) => {\n      console.error(error)\n      if (!usagePlan.usage)\n        usagePlan.usage = { }\n\n      usagePlan.usage.error = error\n    })\n}\n\nexport default observer(() => {\n  return (\n    <Grid container>\n      <Grid.Row>\n        <Grid.Column style={{ paddingTop: \"40px\" }}>\n          <Header size=\"medium\">API Key</Header>\n          <code style={{\n            background: \"black\",\n            border: \"1px solid gray\",\n            padding: \"7px 8px\",\n            color: \"lightgray\",\n            borderRadius: \"5px\"\n          }}>\n            {store.apiKey}\n          </code>\n        </Grid.Column>\n      </Grid.Row>\n      <Divider />\n      <Grid.Row>\n\n        {store.usagePlans\n          .filter(usagePlan => usagePlan.subscribed && usagePlan.apis.length)\n          .map((usagePlan, index) => {\n            let canvasId = `api-usage-chart-container-${usagePlan.id}` + index\n\n            loadUsage(usagePlan, canvasId)\n\n            return (\n              <Grid.Column width={16} widescreen={8} key={usagePlan.id} style={{ marginBottom: \"40px\" }}>\n                <Title apis={usagePlan.apis} />\n                {usagePlan.throttle && (\n                  <Message info>\n                    <p>\n                      Requests limited to {usagePlan.throttle.rateLimit} per second, and {usagePlan.throttle.burstLimit} in a burst.\n                    </p>\n                  </Message>\n                )}\n                {!usagePlan.usage ? (\n                  <Loader active />\n                ) : (\n                    usagePlan.error ? (\n                      <Message error content={usagePlan.error.toString()} />\n                    ) : null\n                  )}\n                <canvas id={canvasId} />\n              </Grid.Column>\n            )\n          })}\n      </Grid.Row>\n    </Grid>\n  )\n})\n\nconst Title = ({ apis }) => {\n  let firstApiName = apis[0].swagger.info.title\n\n  let apiList = (\n    <List> \n      { apis.reduce((acc, api) => acc.concat(\n        <List.Item key={api.id}>{api.swagger.info.title}</List.Item>\n      ), []) } \n    </List>\n  )\n\n  let extraApiCount = apis.length - 1\n\n  return (\n    <Header size=\"medium\">\n      Usage for {extraApiCount ? (\n        <Popup\n          trigger={ <a style={{ cursor: \"pointer\" }}>{firstApiName} and {extraApiCount} more...</a> }\n          content={ apiList }\n          on={['hover', 'click']}\n          position=\"right center\"\n        />\n      ) : (\n        firstApiName\n      )}\n    </Header>\n  )\n}\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport AWS from 'aws-sdk'\nimport { CognitoUserPool, CognitoUser, AuthenticationDetails } from 'amazon-cognito-identity-js'\n\n// services\nimport { store } from 'services/state'\nimport { updateAllUserData } from 'services/api-catalog'\nimport { initApiGatewayClient, apiGatewayClient, cognitoDomain, cognitoIdentityPoolId, cognitoUserPoolId, cognitoClientId, cognitoRegion } from 'services/api'\nimport * as jwt_decode from \"jwt-decode\";\n\nconst poolData = {\n  UserPoolId: cognitoUserPoolId,\n  ClientId: cognitoClientId\n}\n\nlet userPool\n\nexport function isAuthenticated() {\n  return store.cognitoUser\n}\n\nfunction getCognitoLoginKey() {\n  return `cognito-idp.${cognitoRegion}.amazonaws.com/${cognitoUserPoolId}`\n}\n\nexport function isAdmin() {\n  return store.cognitoUser &&\n  `${jwt_decode(store.cognitoUser.signInUserSession.idToken.jwtToken)['cognito:preferred_role']}`\n    .includes('-CognitoAdminRole-')\n}\n\nexport function init() {\n  initApiGatewayClient() // init a blank client (will get overwritten if we have creds)\n\n  // attempt to refresh credentials from active session\n  userPool = new CognitoUserPool(poolData)\n  let cognitoUser = userPool.getCurrentUser()\n\n  if (cognitoUser !== null) {\n    cognitoUser.getSession(function(err, session) {\n      if (err) {\n        logout()\n        console.error(err)\n        return\n      }\n\n      store.cognitoUser = cognitoUser\n      setCredentials(cognitoUser)\n    })\n  } else {\n    let signInUserSession,\n        parsedToken,\n        valid = false\n\n    try {\n      signInUserSession = JSON.parse(localStorage.getItem(JSON.stringify(poolData)))\n      if (signInUserSession) { // this `if` prevents console.error spam\n        parsedToken = jwt_decode(signInUserSession.idToken.jwtToken)\n        valid = parsedToken.exp*1000 > new Date()\n      }\n    } catch (error) { \n      console.error(error)\n    }\n\n    if (valid) {\n      cognitoUser = new CognitoUser({ Username: parsedToken['cognito:username'], Pool: userPool })\n      cognitoUser.signInUserSession = signInUserSession\n\n      store.cognitoUser = cognitoUser\n      setCredentials(cognitoUser)\n    } else {\n      logout()\n    }\n  }\n}\n\nexport function register(email, password) {\n  localStorage.clear()\n  const attributeList = []\n  return new Promise((resolve, reject) => {\n    userPool.signUp(email, password, attributeList, null, (err, result) => {\n      if (err) {\n        reject(err)\n      } else {\n        resolve(login(email, password))\n      }\n    })\n  })\n}\n\n// This is a pretty crazy mess.\n//\n// Basically, this is a login function that tries one of two ways to login\n// and returns a promise that resolves or rejects based on login success\n// It's hyper complicated and doesn't need to be and should be simplified \n// once we get rid of the custom login.\nexport function login(email, password) {\n  let cognitoUser\n\n  return new Promise((resolve, reject) => {\n    if (window.location.hash) { // assume we're grabbing tokens out of the hash\n      // fake the signInUserSession\n      let idToken, accessToken, username\n\n      try {\n        window.location.hash\n          .replace(/^#/, '')\n          .split('&')\n          .map(param => param.split('='))\n          .forEach(param => {\n            // record the id_token and access_token\n            if (param[0] === 'id_token') idToken = param[1]\n            if (param[0] === 'access_token') accessToken = param[1]\n          })\n\n        if (idToken) { // we get both, we set both, but we only really care about the idToken\n          username = jwt_decode(idToken)['cognito:username']\n\n          cognitoUser = new CognitoUser({ Username: username, Pool: new CognitoUserPool(poolData) })\n          cognitoUser.signInUserSession = { idToken: { jwtToken: idToken }, accessToken: { jwtToken: accessToken } }\n\n          localStorage.setItem(JSON.stringify(poolData), JSON.stringify(cognitoUser.signInUserSession))\n\n          store.cognitoUser = cognitoUser\n          setCredentials(cognitoUser)\n\n          resolve(cognitoUser)\n        }\n      } \n      \n      catch (error) {\n        reject(error)\n      }\n\n    } \n\n    else {\n      cognitoUser = new CognitoUser({\n        Username: email,\n        Pool: new CognitoUserPool(poolData)\n      })\n\n      const authenticationDetails = new AuthenticationDetails({\n        Username: email,\n        Password: password\n      })\n\n      cognitoUser.authenticateUser(authenticationDetails, {\n        onSuccess: (result) => {\n          store.cognitoUser = cognitoUser\n          resolve(setCredentials(store.cognitoUser))\n        },\n\n        onFailure: reject\n      })\n    } \n  })\n}\n\nfunction setCredentials(cognitoUser) {\n  let preferred_role =\n      jwt_decode(cognitoUser.signInUserSession.idToken.jwtToken)['cognito:preferred_role'],\n      params = {\n          IdentityPoolId: cognitoIdentityPoolId,\n          Logins: {\n              [getCognitoLoginKey()]: cognitoUser.signInUserSession.idToken.jwtToken\n          }\n      }\n\n  if(preferred_role)\n    params.RoleArn = preferred_role\n\n  AWS.config.credentials = new AWS.CognitoIdentityCredentials(params)\n\n  return new Promise((resolve, reject) => {\n    AWS.config.credentials.refresh((error) => {\n      if (error) {\n        console.error(error)\n        return reject(error)\n      }\n  \n      initApiGatewayClient(AWS.config.credentials)\n      updateAllUserData()\n  \n      return apiGatewayClient()\n        .then(apiGatewayClient => apiGatewayClient.post('/signin', {}, {}, {}))\n    })\n  })\n}\n\nexport function logout() {\n  if (store.cognitoUser) {\n    store.cognitoUser.signOut()\n    store.resetUserData()\n    localStorage.clear()\n\n    if (cognitoDomain) {\n      // redirect to cognito to log out there, too\n      window.location = `${cognitoDomain}/logout?client_id=${cognitoClientId}&logout_uri=${window.location.protocol}//${window.location.host}`;\n    }\n  }\n}\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\nimport { Link } from 'react-router-dom'\n\n// semantic-ui\nimport { Menu, Loader } from 'semantic-ui-react'\n\n// store\nimport { observer } from 'mobx-react'\nimport { store } from 'services/state'\nimport { updateUsagePlansAndApisList, getApi } from 'services/api-catalog';\n\n// utilities\nimport _ from 'lodash'\n\nfunction isActive(apiId, selectedApiId, stage, selectedStage) {\n  if (!selectedStage) return (selectedApiId) ? apiId === selectedApiId : false\n  return (selectedApiId) ? apiId === selectedApiId && stage === selectedStage : false\n}\n\nexport default observer(function ApisMenu() {\n  const loadingApis = !store.apiList.loaded\n  const hasGatewayApis = !!_.get(store, 'apiList.apiGateway.length')\n  const hasGenericApis = !!_.get(store, 'apiList.generic.length')\n\n  // either grab the selectedApiId from the path OR\n  // grab it from the first apiGateway api OR\n  // grab it from the first generic api\n  const selectedApiId = (\n    this.props.path.params.apiId ||\n    (hasGatewayApis && store.apiList.apiGateway[0].id) ||\n    (hasGenericApis && store.apiList.generic[0].id)\n  )\n\n  let selectedStage\n\n  if (this.props.path.params.stage) {\n    selectedStage = this.props.path.params.stage\n  }\n\n\n  // If we're still loading, display a spinner.\n  // If we're not loading, and we don't have any apis, display a message.\n  // If we're not loading, and we have some apis, render the appropriate api subsections for apiGateway and generic apis \n  return (\n    <Menu inverted vertical attached style={{ margin: 0, borderRadius: 0 }} {...this.props}>\n      {loadingApis ? (\n        <Loader active />\n      ) : (\n          (hasGatewayApis || hasGenericApis) ? (\n            <React.Fragment>\n              {hasGatewayApis && <ApiSubsection title=\"Subscribable\" listOfApis={store.apiList.apiGateway} selectedApiId={selectedApiId} selectedStage={selectedStage} />}\n              {hasGenericApis && <GenericApiSubsection title=\"Not Subscribable\" listOfApis={store.apiList.generic} selectedApiId={selectedApiId} />}\n            </React.Fragment>\n          ) : (\n              <p style={{ padding: \"13px 16px\", color: \"whitesmoke\" }}>No APIs Published</p>\n            )\n        )}\n    </Menu>\n  )\n})\n\nfunction GenericApiSubsection({ title, listOfApis, selectedApiId }) {\n  return (\n    <React.Fragment>\n      <Menu.Header\n        style={{\n          padding: \"13px 5px 13px 16px\",\n          color: 'lightsteelblue'\n        }}\n      >\n        {title}\n      </Menu.Header>\n      {listOfApis.map(api => (\n        <Menu.Item\n          key={api.id}\n          as={Link}\n          to={`/apis/${api.id}`}\n          active={isActive(api.id.toString(), selectedApiId.toString())}\n        >\n          {api.swagger.info.title}\n        </Menu.Item>\n      ))}\n    </React.Fragment>\n  )\n}\n\nfunction ApiSubsection({ title, listOfApis, selectedApiId, selectedStage = false }) {\n  return (\n    <React.Fragment>\n      <Menu.Header\n        style={{\n          padding: \"13px 5px 13px 16px\",\n          color: 'lightsteelblue'\n        }}\n      >\n        {title}\n      </Menu.Header>\n      {listOfApis.map(api => (\n        <Menu.Item\n          key={api.id}\n          as={Link}\n          to={`/apis/${api.id}/stage/${api.stage}`}\n          active={isActive(api.id.toString(), selectedApiId.toString(), api.stage.toString(), selectedStage)}\n        >\n          {api.swagger.info.title}\n        </Menu.Item>\n      ))}\n    </React.Fragment>\n  )\n}","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\n\n// semantic-ui\nimport { Button, Header, Image, Container } from 'semantic-ui-react'\n\n// services\nimport { subscribe, unsubscribe } from 'services/api-catalog'\nimport { isAuthenticated } from 'services/self'\n\n// state\nimport { observer } from 'mobx-react'\nimport { store } from 'services/state.js'\n\n// Create the plugin that provides our layout component\nexport const SwaggerLayoutPlugin = () => ({ components: { InfoContainer: InfoReplacement } })\n\n// replaces the InfoContainer component\n// https://github.com/swagger-api/swagger-ui/blob/dd3afdc45656bda2a64ae6a7f9bdad006ea98149/src/core/components/layouts/base.jsx\n\nconst InfoReplacement = observer(({ specSelectors }) => {\n  const basePath = specSelectors.basePath()\n  const host = specSelectors.host()\n  const externalDocs = specSelectors.externalDocs()\n\n  return (\n    <Container fluid textAlign='left' className=\"fixfloat\" style={{ padding: \"40px 0px\" }}>\n      <div style={{ display: \"flex\" }}>\n        <div style={{ flex: \"0 0 auto\", marginRight: \"20px\" }}>\n          <Image size='small' src={store.api.logo} />\n        </div>\n        <div>\n          <Header as='h1'>{store.api.swagger.info.title}</Header>\n          <div style={{ display: \"flex\" }}>\n            <div style={{ marginRight: \"20px\" }}>\n              {store.api.generic && (\n                <p style={{ fontWeight: \"bold\" }}>Version</p>\n              )}\n              <p style={{ fontWeight: \"bold\" }}>Endpoint</p>\n              {/* <p style={{ fontWeight: \"bold\" }}>Usage Plan</p> */}\n            </div>\n            <div>\n              {store.api.generic && (\n                <p>{store.api.swagger.info.version}</p>\n              )}\n              <p>https://{host}{basePath}</p>\n              {/* <p>{store.api.usagePlan.name}</p> */}\n            </div>\n          </div>\n          <p>{externalDocs}</p>\n          <SubscriptionButtons />\n        </div>\n      </div>\n    </Container>\n  )\n})\n\nconst SubscriptionButtons = observer(class SubscriptionButtons extends React.Component {\n  state = {}\n\n  render() {\n    const { api } = store\n    return (\n      (api && isAuthenticated()) ? !api.generic ? (\n        api.subscribed ? (\n          <Button onClick={() => unsubscribe(api.usagePlan.id)}>Unsubscribe</Button>\n        ) : (\n          <Button onClick={() => subscribe(api.usagePlan.id)} >Subscribe</Button>\n        )\n      ) : <Header as='h4' color='darkgrey'>This API is not configured for subscription from the portal.</Header> : null\n    )\n  }\n})\n\n\nexport default SwaggerLayoutPlugin","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\n\n// swagger-ui\nimport SwaggerUI from 'swagger-ui'\nimport 'swagger-ui/dist/swagger-ui.css'\n\n// semantic-ui\nimport { Container, Header, Icon } from 'semantic-ui-react'\n\n// services\nimport { isAuthenticated } from 'services/self'\nimport { updateUsagePlansAndApisList, getApi } from 'services/api-catalog';\n\n// components\nimport ApisMenu from 'components/ApisMenu'\nimport SwaggerLayoutPlugin from 'components/SwaggerUiLayout'\n\n// state\nimport { store } from 'services/state.js'\nimport { observer } from 'mobx-react'\n\nexport default observer(class ApisPage extends React.Component {\n  componentDidMount() { updateUsagePlansAndApisList(true); this.updateApi() }\n  componentDidUpdate() { this.updateApi() }\n\n  updateApi = () => {\n    getApi(this.props.match.params.apiId || 'ANY', true, this.props.match.params.stage)\n      .then(api => {\n        if (api) {\n          let swaggerUiConfig = {\n            dom_id: '#swagger-ui-container',\n            plugins: [SwaggerLayoutPlugin],\n            supportedSubmitMethods: [],\n            spec: api.swagger,\n            onComplete: () => {\n              if (store.apiKey)\n                uiHandler.preauthorizeApiKey(\"api_key\", store.apiKey)\n            }\n          }\n          if (isAuthenticated()) {\n            delete swaggerUiConfig.supportedSubmitMethods\n          }\n          let uiHandler = SwaggerUI(swaggerUiConfig)\n        }\n      })\n  }\n\n  render() {\n    let errorHeader\n    let errorBody \n\n    if (!store.apiList.apiGateway.length && !store.apiList.generic.length) {\n      errorHeader = `No APIs Published`\n      errorBody = `Your administrator hasn't added any APIs to your account. Please contact them to publish an API.`\n    } else if (!store.api) {\n      errorHeader = `No Such API`\n      errorBody = `The selected API doesn't exist.`\n    }\n\n    return (\n      <div style={{ display: \"flex\", flex: \"1 1 auto\", overflow: \"hidden\" }}>\n        <ApisMenu path={this.props.match} style={{ flex: \"0 0 auto\" }} />\n        <div className=\"swagger-section\" style={{ flex: \"1 1 auto\", overflow: 'auto' }}>\n          <div className=\"swagger-ui-wrap\" id=\"swagger-ui-container\" style={{ padding: \"0 20px\" }}>\n            {errorHeader && errorBody && (\n              <React.Fragment>\n                <Header as='h2' icon textAlign=\"center\" style={{ padding: \"40px 0px\" }}>\n                  <Icon name='warning sign' circular />\n                  <Header.Content>{errorHeader}</Header.Content>\n                </Header>\n                <Container text textAlign='justified'>\n                  <p>{errorBody}</p>\n                </Container>\n              </React.Fragment>\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n})\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport { ApiManagement, SideNav } from './'\nimport { AdminRoute } from './../../';\n\nexport class Admin extends Component {\n  render() {\n    return (\n      <Router>\n        <div style={{ display: \"flex\", flex: \"1 1 auto\", overflow: \"hidden\" }}>\n          <SideNav style={{ flex: \"0 0 auto\" }} />\n          <div style={{ flex: \"1 1 auto\", overflow: 'auto' }}>\n            <AdminRoute exact path=\"/admin\" component={ApiManagement} />\n            <AdminRoute path=\"/admin/apis\" component={ApiManagement} />\n          </div>\n        </div>\n      </Router>\n    )\n  }\n}\n","import React from 'react'\n\nimport { isAdmin } from 'services/self'\n\nimport { observer } from 'mobx-react'\n\nimport { Link } from 'react-router-dom'\nimport { Menu } from 'semantic-ui-react'\n\n\nexport const SideNav = observer(() => (\n  isAdmin() &&\n  (<Menu inverted vertical borderless attached style={{ flex: \"0 0 auto\" }}>\n    <Menu.Item as={Link} to=\"/admin/apis\">APIs</Menu.Item>\n  </Menu>)\n))\n","import React, { Component } from 'react';\n\nimport { Button, Table, Modal, Form } from 'semantic-ui-react'\n\nimport { apiGatewayClient } from 'services/api'\nimport { updateUsagePlansAndApisList, getApi } from 'services/api-catalog';\n\nimport * as YAML from 'yamljs'\nimport { store } from 'services/state';\nimport { toJS } from 'mobx'\n\n\nexport class ApiManagement extends Component {\n  state = {\n    apis: {\n      apiGateway: null,\n      generic: null\n    },\n    modalOpen: false\n  }\n\n  fileInput = React.createRef()\n\n  componentDidMount() {\n    this.getApiVisibility()\n  }\n\n  uploadAPISpec = (event) => {\n    event.preventDefault();\n\n    const files = this.fileInput.current.files\n    let swagger\n\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i]\n      const reader = new FileReader()\n\n      reader.onload = ((f) => (e) => {\n        console.log(f)\n        if (f.name.includes('yaml')) {\n          swagger = JSON.stringify(YAML.parse(e.target.result))\n        } else {\n          swagger = JSON.stringify(JSON.parse(e.target.result))\n        }\n\n        apiGatewayClient()\n          .then((app) => app.post('/admin/catalog/visibility', {}, { swagger: swagger }, {}))\n          .then((res) => {\n            if (res.status === 200) {\n              this.setState(prev => ({ ...prev, modalOpen: false }))\n            }\n            setTimeout(() => this.getApiVisibility(), 2000)\n          })\n      })(file);\n      reader.readAsText(file);\n    }\n  }\n\n  deleteAPISpec = (apiId) => {\n    function hash(str) {\n      let hash = 5381,\n        i = str.length;\n\n      while (i) {\n        hash = (hash * 33) ^ str.charCodeAt(--i);\n      }\n\n      /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n       * integers. Since we want the results to be always positive, convert the\n       * signed int to an unsigned by doing an unsigned bitshift. */\n      return hash >>> 0;\n    }\n\n    getApi(apiId).then(api => {\n      let myHash = hash(JSON.stringify(api.swagger))\n      console.log(myHash)\n      apiGatewayClient()\n        .then(app => app.delete(`/admin/catalog/visibility/generic/${myHash}`, {}, {}, {}))\n        .then((res) => {\n          console.log(`data received: ${JSON.stringify(res, null, 2)}`);\n          setTimeout(() => this.getApiVisibility(), 2000)\n        })\n    })\n\n  }\n\n  getApiVisibility = () => {\n    apiGatewayClient()\n      .then(app => app.get('/admin/catalog/visibility', {}, {}, {}))\n      .then(res => {\n        console.log('data: %o', res.data)\n        if (res.status === 200) {\n          this.setState(prev => ({ ...prev, apis: res.data }))\n        } else {\n          throw new Error('woops:')\n        }\n      })\n  }\n\n  updateLocalApiGatewayApis = (apisList, updatedApi) => {\n    const updatedApis = apisList.map(stateApi => {\n      if (stateApi.id === updatedApi.id && stateApi.stage === updatedApi.stage) {\n        stateApi.visibility = !stateApi.visibility\n      }\n      return stateApi\n    })\n\n    this.setState(\n      ({ apis: { generic = undefined } }, ...prev) => ({ ...prev, apis: { apiGateway: updatedApis, generic } })\n    )\n  }\n\n  showApiGatewayApi = (api) => {\n    console.log(`showing ${api.name}: ${api.id}_${api.stage}`)\n    apiGatewayClient()\n      .then(app => app.post('/admin/catalog/visibility', {}, { apiKey: `${api.id}_${api.stage}` }, {}))\n      .then((res) => {\n        if (res.status === 200) {\n          this.updateLocalApiGatewayApis(this.state.apis.apiGateway, api)\n        }\n      })\n  }\n\n  hideApiGatewayApi = (api) => {\n    console.log(`hiding ${api.name}: ${api.id}_${api.stage}`)\n    apiGatewayClient()\n      .then(app => app.delete(`/admin/catalog/visibility/${api.id}_${api.stage}`, {}, {}, {}))\n      .then((res) => {\n        if (res.status === 200) {\n          this.updateLocalApiGatewayApis(this.state.apis.apiGateway, api)\n        }\n      })\n  }\n  \n  updateApiGatewayApi = (api) => {\n    console.log(`showing ${api.name}: ${api.id}_${api.stage}`)\n    apiGatewayClient()\n      .then(app => app.post('/admin/catalog/visibility', {}, { apiKey: `${api.id}_${api.stage}` }, {}))\n      .then(res => console.log(res.status))\n  }\n\n  render() {\n    return (\n      <div style={{ display: 'flex', width: '100%' }}>\n        <div style={{ padding: '2em' }}>\n          <Table celled collapsing>\n          <Table.Header fullWidth>\n              <Table.Row>\n                <Table.HeaderCell colSpan='5'>API Gateway APIs</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Header fullWidth>\n              <Table.Row>\n                <Table.HeaderCell collapsing sorted=\"ascending\">API Name</Table.HeaderCell>\n                <Table.HeaderCell>Stage</Table.HeaderCell>\n                <Table.HeaderCell>API Type</Table.HeaderCell>\n                <Table.HeaderCell>Displayed</Table.HeaderCell>\n                <Table.HeaderCell>Update</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {this.state.apis.apiGateway ? this.state.apis.apiGateway.map((api, i) =>\n                api.id != window.config.restApiId && (\n                  <Table.Row key={i}>\n                    <Table.Cell collapsing>{api.name}</Table.Cell>\n                    <Table.Cell>{api.stage}</Table.Cell>\n                    <Table.Cell>{api.subscribable ? 'Subscribable' : 'Not Subscribable'}</Table.Cell>\n                    <Table.Cell>\n                      <Button basic\n                        color={api.visibility ? 'green' : 'red'}\n                        onClick={() => api.visibility ? this.hideApiGatewayApi(api) : this.showApiGatewayApi(api)}>\n                        {api.visibility ? 'True' : 'False'}\n                      </Button>\n                    </Table.Cell>\n                    <Table.Cell>\n                      <Button basic\n                        color='blue'\n                        disabled={!api.visibility}\n                        onClick={() => this.updateApiGatewayApi(api)}>\n                        Update\n                      </Button>\n                    </Table.Cell>\n                  </Table.Row>\n                )) : (\n                  <Table.Row >\n                    <Table.Cell colSpan='4'>\n                      No APIs found\n                </Table.Cell>\n                  </Table.Row>\n                )}\n            </Table.Body>\n          </Table>\n        </div>\n\n        <div style={{ padding: '2em' }}>\n          <Table celled collapsing>\n          <Table.Header fullWidth>\n              <Table.Row>\n                <Table.HeaderCell colSpan='4'>API Gateway APIs</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Header fullWidth>\n              <Table.Row>\n                <Table.HeaderCell colSpan='2'>\n                  <Modal\n                    closeOnEscape={true}\n                    closeOnDimmerClick={true}\n                    onClose={()=>this.setState((prev) => ({...prev, modalOpen: false}))}\n                    trigger={\n                    <Button floated='right' onClick={() => this.setState((prev) => ({ ...prev, modalOpen: true }))}>\n                      Add API\n                    </Button>}\n                    open={this.state.modalOpen}\n                  >\n                    <Modal.Header>Select .JSON, .YAML, or .YML files</Modal.Header>\n                    <Modal.Content>\n                      <React.Fragment>\n                        <Form onSubmit={this.uploadAPISpec}>\n                          <Form.Field>\n                            <label htmlFor=\"files\">Select Files:</label>\n                            <input type=\"file\" id=\"files\" name=\"files\" accept=\".json,.yaml,.yml\" multiple={true} ref={this.fileInput} />\n                          </Form.Field>\n                          <Button type='submit'>Upload</Button>\n                        </Form>\n                      </React.Fragment>\n                    </Modal.Content>\n                  </Modal>\n                </Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Header fullWidth>\n              <Table.Row>\n                <Table.HeaderCell collapsing sorted=\"ascending\">API Name</Table.HeaderCell>\n                <Table.HeaderCell>Delete</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {this.state.apis.generic ? Object.keys(this.state.apis.generic).map((apiId, i) =>\n                (\n                  <Table.Row key={i}>\n                    <Table.Cell collapsing>{this.state.apis.generic[apiId].name}</Table.Cell>\n                    <Table.Cell>\n                      <Button basic\n                        color='red'\n                        onClick={() => this.deleteAPISpec(apiId)}>\n                          Delete\n                      </Button>\n                    </Table.Cell>\n                  </Table.Row>\n                )) : (\n                  <Table.Row >\n                    <Table.Cell colSpan='4'>\n                      No APIs found\n                    </Table.Cell>\n                  </Table.Row>\n                )}\n            </Table.Body>\n          </Table>\n        </div>\n      </div>\n    );\n  }\n}\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\nimport { Message } from 'semantic-ui-react'\n\nexport default class AlertPopup extends React.Component {\n  state = {\n    isVisible: false,\n    message: ''\n  }\n\n  handleDismiss = () => {\n    this.setState({ isVisible: false })\n  }\n\n  render() {\n      return (\n        <Message\n          hidden={!this.state.isVisible}\n          negative\n          floating\n          icon='warning sign'\n          onDismiss={this.handleDismiss}\n          header='Error'\n          content={this.state.message}\n        />\n      )\n  }\n}\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\nimport {Menu} from 'semantic-ui-react'\nimport {Redirect} from 'react-router-dom'\n\nimport {cognitoDomain, cognitoClientId} from '../services/api'\n\nexport default class Register extends React.Component {\n    redirectUri = `${window.location.protocol}//${window.location.host}/login`\n\n    render() {\n        return this.props.signedIn ? <Redirect to='/apis'/> : (\n            <Menu.Item key=\"register\" as=\"a\"\n                       href={`${cognitoDomain}/signup?response_type=token&client_id=${cognitoClientId}&redirect_uri=${this.redirectUri}`}>Register</Menu.Item>)\n    }\n}","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Menu, Image } from 'semantic-ui-react'\n\nimport { isAdmin, isAuthenticated, logout } from 'services/self'\n\nimport { cognitoDomain, cognitoClientId } from '../services/api'\n\n// mobx\nimport { observer } from 'mobx-react'\n\n// fragments\nimport { fragments } from 'services/get-fragments'\n\n// components\nimport Register from './Register'\n\nexport const NavBar = observer(\n  class NavBar extends React.Component {\n    getCognitoUrl = (type) => {\n      let redirectUri = `${window.location.protocol}//${window.location.host}/login`\n      return `${cognitoDomain}/${type}?response_type=token&client_id=${cognitoClientId}&redirect_uri=${redirectUri}`\n    }\n\n    insertAuthMenu() {\n      return isAuthenticated() ?\n        (\n          <Menu.Menu position=\"right\">\n            {isAdmin() && <Menu.Item as={Link} to=\"/admin\">Admin Panel</Menu.Item>}\n            <Menu.Item key=\"dashboard\" as={Link} to=\"/dashboard\">My Dashboard</Menu.Item>\n            <Menu.Item key=\"signout\" as=\"a\" onClick={logout}>Sign Out</Menu.Item>\n          </Menu.Menu>\n        ) : (\n          <Menu.Menu position=\"right\">\n            <Menu.Item key=\"register\" as=\"a\"\n                       href={this.getCognitoUrl('login')}>\n                Sign In\n            </Menu.Item>\n            <Register />\n          </Menu.Menu>\n        )\n    }\n\n    render() {\n      return <Menu inverted borderless attached style={{ flex: \"0 0 auto\" }} >\n        <Menu.Item as={Link} to=\"/\">\n          <Image size='mini' src=\"/custom-content/nav-logo.png\" style={{ paddingRight: \"10px\" }} />\n          {fragments.Home.title}\n        </Menu.Item>\n\n        <Menu.Item as={Link} to=\"/getting-started\">{fragments.GettingStarted.title}</Menu.Item>\n        <Menu.Item as={Link} to=\"/apis\">{fragments.APIs.title}</Menu.Item>\n\n        {this.insertAuthMenu()}\n      </Menu >\n    }\n  }\n)\n\nexport default NavBar\n","import { apiGatewayClient } from './api'\n\nexport const submitFeedback = (message) => {\n  return apiGatewayClient()\n          .then(client => {\n            return client.post('/feedback', {}, { message }, {})\n          })\n}\n","import React from 'react'\nimport { Button, Form, Modal, TextArea, Message } from 'semantic-ui-react'\nimport { submitFeedback } from 'services/feedback'\n\nconst initialState = {\n  message: '',\n  formOpen: false,\n  feedbackSubmitted: false\n}\n\nclass Feedback extends React.PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.state = initialState\n  }\n\n  openModal = () => {\n    this.setState({\n      formOpen: true\n    })\n  }\n\n  closeModal = () => {\n    this.setState(initialState)\n  }\n\n  handleSubmit = () => {\n    const { message } = this.state\n    submitFeedback(message).then(() => {\n      this.setState({\n        feedbackSubmitted: true\n      })\n    })\n  }\n\n  render() {\n    const { \n      message,\n      formOpen,\n      feedbackSubmitted\n    } = this.state\n    \n    return (\n      <Modal \n        closeIcon\n        centered={false}\n        size='tiny' \n        open={formOpen}\n        onClose={this.closeModal}\n        trigger={\n          <div style={{ \n            display: 'block',\n            position: 'fixed', \n            top: '80%',\n            right: '-62px', // Adjusted for rotation\n            transform: 'rotate(90deg)'\n          }}>\n            <Button style={{\n              borderTopLeftRadius: '0',\n              borderTopRightRadius: '0'\n            }} onClick={this.openModal}><i className=\"envelope outline icon\"></i>Got an opinon?</Button>\n          </div>\n        }>\n        <Modal.Header>Let us know!</Modal.Header>\n        <Modal.Content>\n          {!feedbackSubmitted &&\n            <Form>\n              <Form.Field>\n                <TextArea value={message} onChange={(e) => this.setState({ message: e.target.value})} />\n              </Form.Field>\n              <Button type='submit' positive onClick={this.handleSubmit}>Submit</Button>\n            </Form>\n          }\n          {feedbackSubmitted &&\n            <Message positive>\n              <p>Thanks for your feedback</p>\n            </Message>\n          }\n        </Modal.Content>\n      </Modal>\n    )\n  }\n}\n\nexport default Feedback\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\n\n// content-fragments (import here to start this ASAP)\nimport 'services/get-fragments'\n\n// semantic-ui\nimport 'semantic-ui-css/semantic.css'\n\n// pages\nimport Home from 'pages/Home'\nimport GettingStarted from 'pages/GettingStarted'\nimport Dashboard from 'pages/Dashboard'\nimport Apis from 'pages/Apis'\nimport { Admin } from 'pages/Admin'\n\n// components\nimport AlertPopup from 'components/AlertPopup'\nimport NavBar from 'components/NavBar'\nimport Feedback from './components/Feedback'\n\nimport { isAdmin, init, login, logout } from 'services/self'\nimport './index.css';\n\n// TODO: Feedback should be enabled if\n// the following is true && the current\n// user is not an administrator\nconst feedbackEnabled = window.config.feedbackEnabled\n\nexport const AdminRoute = ({component: Component, ...rest}) => (\n  <Route {...rest} render={(props) => (\n    isAdmin()\n      ? <Component {...props} />\n      : <Redirect to=\"/\" />\n  )} />\n)\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    init()\n\n    // We are using an S3 redirect rule to prefix the url path with #!\n    // This then converts it back to a URL path for React routing\n    if (window.location.hash && window.location.hash[1] === '!') {\n      const hashRoute = window.location.hash.substring(2)\n      window.history.pushState({}, 'home page', hashRoute)\n    }\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <NavBar />\n          <AlertPopup />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/getting-started\" component={GettingStarted} />\n            <Route path=\"/dashboard\" component={Dashboard} />\n            <AdminRoute path=\"/admin\" component={Admin} />\n            <Route exact path=\"/apis\" component={Apis} />\n            <Route exact path=\"/apis/:apiId\" component={Apis}/>\n            <Route path=\"/apis/:apiId/stage/:stage\" component={Apis} />\n            <Route path=\"/login\" render={() => { login(); return <Redirect to=\"/\" /> }} />\n            <Route path=\"/logout\" render={() => { logout(); return <Redirect to=\"/\" /> }} />\n            <Route component={() => <h2>Page not found</h2>} />\n          </Switch>\n          {feedbackEnabled && <Feedback />}\n        </React.Fragment>\n      </BrowserRouter>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}