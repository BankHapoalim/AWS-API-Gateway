{"version":3,"sources":["services/get-fragments.js","services/api.js","pages/Home.jsx","pages/GettingStarted.jsx","services/state.js","services/api-catalog.js","services/misc.js","pages/Dashboard.jsx","services/self.js","components/ApisMenu.jsx","components/SwaggerUiLayout.jsx","pages/Apis.jsx","components/AlertPopup.jsx","components/SignIn.jsx","components/Register.jsx","components/NavBar.jsx","index.js"],"names":["fragments","observable","loadHtml","path","fragment","jsx","fetch","then","response","text","parsedMarkdown","frontmatter","Object","objectSpread","react_default","a","createElement","with_html_default","escapeHtml","source","body","renderers","attributes","cachedClient","link","_ref","href","props","objectWithoutProperties","test","assign","target","rel","Link","to","HomePage","observer","Fragment","Segment","vertical","textAlign","style","color","backgroundColor","padding","margin","Image","centered","size","src","Header","as","Home","header","tagline","Button","positive","gettingStartedButton","apiListButton","Container","fluid","GettingStarted","awsRegion","window","config","region","cognitoRegion","cognitoUserPoolId","userPoolId","cognitoClientId","userPoolClientId","cognitoDomain","userPoolDomain","cognitoAdminClientId","adminUserPoolId","adminUserPoolClientId","cognitoAdminDomain","adminUserPoolDomain","initApiGatewayClient","jwtToken","apigClientFactory","newClient","apiGatewayClient","Promise","resolve","poller","setInterval","clearInterval","AWS","store","api","undefined","apiKey","apiList","loaded","apiGateway","generic","cognitoUser","usagePlans","subscriptions","initialize","this","clear","reset","_this","defaults","_len","arguments","length","keys","Array","_key","forEach","key","_","set","get","resetUserData","reactTo","triggerFn","effectFn","reaction","data","action","usagePlan","usagePlanId","subscribed","id","find","sub","apis","updateSubscriptionStatus","concat","logo","specificLogo","stage","headers","Accept","redirect","ok","fetchApiImage","catalogPromiseCache","subscriptionsPromiseCache","apiKeyPromiseCache","updateAllUserData","bustCache","all","updateUsagePlansAndApisList","updateSubscriptions","apiKeyOrPromise","_ref3","value","updateApiKey","_ref$data","reduce","acc","cloneDeep","catch","subscriptionsOrPromise","_ref2","mapUsageByDate","usage","usedOrRemaining","dates","items","apiKeyId","apiKeyUsage","startDate","apiKeyDate","Date","isArray","map","date","setDate","getDate","item","toConsumableArray","mapApiKeyUsageByDate","dailyUsage","used","remaining","sort","parseInt","toTitleCase","string","firstLetter","allOtherLetters","slice","toUpperCase","toLowerCase","loadUsage","canvasId","start","end","getFullYear","getMonth","toJSON","split","result","ctx","document","getElementById","JSON","stringify","labels","d","toLocaleDateString","weekday","year","month","day","max","Math","apply","chartConfig","type","datasets","label","quota","period","lineTension","borderColor","pointBackgroundColor","pointBorderColor","borderWidth","pointRadius","pointHoverRadius","options","scales","yAxes","ticks","beginAtZero","suggestedMax","Chart","error","console","userPool","Grid","container","Row","Column","paddingTop","background","border","borderRadius","Divider","filter","index","width","widescreen","marginBottom","Dashboard_Title","throttle","Message","info","rateLimit","burstLimit","content","toString","Loader","active","Title","firstApiName","swagger","title","List","Item","extraApiCount","Popup","trigger","cursor","on","position","poolData","UserPoolId","ClientId","isAuthenticated","login","email","password","localCognitoUser","CognitoUser","Username","Pool","CognitoUserPool","reject","authenticationDetails","AuthenticationDetails","Password","authenticateUser","onSuccess","setCredentials","onFailure","location","hash","signInUserSession","replace","param","idToken","accessToken","localStorage","setItem","post","logout","signOut","protocol","host","loadingApis","hasGatewayApis","hasGenericApis","selectedApiId","params","apiId","Menu","inverted","attached","ApiSubsection","listOfApis","isActive","InfoReplacement","specSelectors","basePath","externalDocs","className","display","flex","marginRight","fontWeight","version","SwaggerUiLayout_SubscriptionButtons","SubscriptionButtons","_React$Component","_getPrototypeOf2","classCallCheck","args","possibleConstructorReturn","getPrototypeOf","call","state","inherits","createClass","onClick","delete","put","React","Component","SwaggerLayoutPlugin","components","InfoContainer","ApisPage","updateApi","selectIt","thisApi","allApis","getApi","match","swaggerUiConfig","dom_id","plugins","supportedSubmitMethods","spec","onComplete","uiHandler","preauthorizeApiKey","SwaggerUI","errorHeader","errorBody","overflow","components_ApisMenu","icon","Icon","name","circular","Content","AlertPopup","isVisible","message","handleDismiss","setState","hidden","negative","floating","onDismiss","SignIn","redirectUri","userSignIn","adminSignIn","signedIn","Redirect","wide","Group","Or","primary","Register","NavBar","authenticated","SignIn_SignIn","Register_Register","borderless","paddingRight","APIs","insertAuthMenu","App","getCurrentUser","getSession","err","session","getItem","parse","init","hashRoute","substring","history","pushState","BrowserRouter","components_NavBar","AlertPopup_AlertPopup","Switch","Route","exact","component","Dashboard","Apis","render","ReactDOM","src_App"],"mappings":"kXAeaA,EAAYC,YAAW,IAepC,SAASC,EAASC,EAAMC,GAEtBJ,EAAUI,GAAY,CAAEC,IAAK,kBAAM,OAEnCC,MAAMH,GAAMI,KAAK,SAAAC,GAAQ,OAAIA,EAASC,OAAOF,KAAK,SAAAE,GAChD,IAAIC,EAAiBC,IAAYF,GAEjCT,EAAUI,GAAVQ,OAAAC,EAAA,EAAAD,CAAA,CACEP,IAAK,kBACHS,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEG,YAAY,EACZC,OAAQT,EAAeU,KACvBC,UAAWA,MAGZX,EAAeY,gBA5BxBpB,EAAS,sDAAuD,kBAChEA,EAAS,4CAA6C,QACtDA,EAAS,4CAA6C,QAoCtD,ICvCIqB,EDuCEF,EAAY,CAChBG,KAAM,SAAAC,GAAwB,IAArBC,EAAqBD,EAArBC,KAASC,EAAYf,OAAAgB,EAAA,EAAAhB,CAAAa,EAAA,UAG5B,MAAI,qBAAqBI,KAAKH,GACrBZ,EAAAC,EAAAC,cAAA,IAAAJ,OAAAkB,OAAA,CAAGJ,KAAMA,EAAMK,OAAO,SAASC,IAAI,uBAA0BL,IAG/Db,EAAAC,EAAAC,cAACiB,EAAA,EAADrB,OAAAkB,OAAA,CAAMI,GAAIR,GAAUC,wEE7BhBQ,EAjBSC,YAAS,kBAC/BtB,EAAAC,EAAAC,cAACF,EAAAC,EAAMsB,SAAP,KACEvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAASC,UAAQ,EAACC,UAAU,SAASC,MAAO,CAAEC,MAAO,aAAcC,gBAAiB,YAAaC,QAAS,WAAYC,OAAQ,mBAC5H/B,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAOC,UAAQ,EAACC,KAAK,QAAQC,IAAI,mCACjCnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAQC,GAAG,KAAKV,MAAO,CAAEC,MAAO,eAAiB1C,EAAUoD,KAAKC,QAChEvC,EAAAC,EAAAC,cAAA,SAAIhB,EAAUoD,KAAKE,SACnBxC,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,GAAG,oBAAmBpB,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAQC,UAAQ,GAAExD,EAAUoD,KAAKK,uBAC7D3C,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,GAAG,QAAQO,MAAO,CAAEG,QAAS,kCAAmCF,MAAO,UAAY1C,EAAUoD,KAAKM,gBAE1G5C,EAAAC,EAAAC,cAACsB,EAAA,EAAD,CAASC,UAAQ,EAACE,MAAO,CAAEG,QAAS,WAAYC,OAAQ,iBACtD/B,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAWC,OAAK,EAACnD,MAAI,EAAC+B,UAAU,aAC9B1B,EAAAC,EAAAC,cAAChB,EAAUoD,KAAK/C,IAAhB,WCdO+B,cAAS,kBACtBtB,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAWlB,MAAO,CAAEG,QAAS,SAC3B9B,EAAAC,EAAAC,cAAChB,EAAU6D,eAAexD,IAA1B,mIFXSyD,EAAYC,OAAOC,OAAOC,OAC1BC,EAAgBH,OAAOC,OAAOC,OAC9BE,EAAoBJ,OAAOC,OAAOI,WAClCC,EAAkBN,OAAOC,OAAOM,iBAChCC,EAAgBR,OAAOC,OAAOQ,eAE9BC,IADyBV,OAAOC,OAAOU,gBAChBX,OAAOC,OAAOW,uBACrCC,GAAqBb,OAAOC,OAAOa,oBAMzC,SAASC,GAAqBC,GACnCxD,EAAewC,OAAOiB,kBAAkBC,UAAU,CAChDhB,OAAQH,EACRiB,SAAUA,IAIP,SAASG,KACd,OAAI3D,EAAqB4D,QAAQC,QAAQ7D,GAElC,IAAI4D,QAAQ,SAAAC,GACjB,IAAMC,EAASC,YAAY,WACrB/D,IACFgE,cAAcF,GACdD,EAAQ7D,KAET,OApBPiE,IAAIxB,OAAOC,OAASC,EGmBb,IAAMuB,GAAQxF,YAAWW,OAAAC,EAAA,EAAAD,CAAA,GArBvB,CACL8E,SAAKC,EACLC,YAAQD,EAERE,QAAS,CACPC,QAAQ,EACRC,WAAY,GACZC,QAAS,IAGXC,iBAAaN,EAEbO,WAAY,GAEZC,cAAe,IAOY,CAG7BC,WAH6B,WAM3B,OAFAxF,OAAOkB,OAAOuE,KAzBT,CACLX,SAAKC,EACLC,YAAQD,EAERE,QAAS,CACPC,QAAQ,EACRC,WAAY,GACZC,QAAS,IAGXC,iBAAaN,EAEbO,WAAY,GAEZC,cAAe,KAaRE,MAMTC,MAZ6B,WAa3B,OAAOD,KAAKD,cAQdG,MArB6B,WAqBd,QAAAC,EAAAH,KACPI,EA3CD,CACLf,SAAKC,EACLC,YAAQD,EAERE,QAAS,CACPC,QAAQ,EACRC,WAAY,GACZC,QAAS,IAGXC,iBAAaN,EAEbO,WAAY,GAEZC,cAAe,IA4BFO,EAAAC,UAAAC,OAANC,EAAM,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAANF,EAAME,GAAAJ,UAAAI,GAGb,OADAF,EAAKG,QAAQ,SAAAC,GAAG,OAAGC,IAAEC,IAAIX,EAAMS,EAAKC,IAAEE,IAAIX,EAAUQ,MAC7CZ,MAGTgB,cA3B6B,WA4B3BhB,KAAKE,MAAM,SAAU,cAAe,qBAaxC,SAASe,GAAQC,EAAWC,GAMxBC,YACEF,EACA,SAACG,EAAMC,GAGLH,EAASE,EAAMC,KAUvBL,GACE,iBAAO,CAAEnB,cAAeV,GAAMU,cAAeD,WAAYT,GAAMS,aAC/D,SAAAzE,IAqCF,SAAkCyE,GAC5BA,GACFA,EAAWc,QAAQ,SAAAY,GACjB,ICfiCC,EDe7BC,GCf6BD,EDeSD,EAAUG,KCdjDtC,GAAMU,cAAc6B,KAAK,SAAAC,GAAG,OAAIA,EAAIF,KAAOF,KDe9CD,EAAUE,WAAaA,EAEvBF,EAAUM,KAAKlB,QAAQ,SAAAtB,GAAG,OAAIA,EAAIoC,WAAaA,MA1CjDK,CADkB1G,EAAjByE,cAKLoB,GACE,iBAAM,GAAGc,OAAO3C,GAAMI,QAAQE,WAAYN,GAAMI,QAAQG,UACxD,SAAAH,IAQF,SAAuBA,GACrBA,EAAQmB,QAAQ,SAAAtB,GACd,IAAKA,EAAI2C,KAAM,CACb,IAAIC,EAAY,6BAAAF,OAAgC1C,EAAIqC,GAApC,KAAAK,OAA0C1C,EAAI6C,MAA9C,QAIhBjI,MAAMgI,EAAc,CAAEE,QAAS,CAAEC,OAAQ,aAAeC,SAAU,WAAYnI,KAAK,SAAAC,GAC7EA,EAASmI,GACXjD,EAAI2C,KAAOC,EAER5C,EAAI2C,KAAO,6CAlBpBO,CAAc/C,KAuCHJ,IC1FXoD,GAkEAC,GA+BAC,GDPWtD,GAAMW,aChId,SAAS4C,KAAoC,IAAlBC,IAAkBtC,UAAAC,OAAA,QAAAjB,IAAAgB,UAAA,KAAAA,UAAA,GAClD,OAAOxB,QAAQ+D,IAAI,CACjBC,GAA4BF,GAC5BG,GAAoBH,GA4HjB,SAAsBA,GAC3B,IAAII,EAAkB5D,GAAMG,OAASH,GAAMG,OAASmD,GACpD,OAAKE,GAAaI,EAAwBlE,QAAQC,QAAQiE,GAEnDnE,KACJ3E,KAAK,SAAA2E,GAAgB,OAAIA,EAAiBkC,IAAI,UAAW,GAAI,GAAI,MACjE7G,KAAK,SAAA+I,GAAA,IAAE5B,EAAF4B,EAAE5B,KAAF,OAAajC,GAAMG,OAAS8B,EAAK6B,QAjIvCC,CAAaP,KAWV,SAASE,KAEd,QAF6DxC,UAAAC,OAAA,QAAAjB,IAAAgB,UAAA,IAAAA,UAAA,KAE3CkC,GAA4BA,GAEvCA,GAAsB3D,KAC1B3E,KAAK,SAAA2E,GAAgB,OAAIA,EAAiBkC,IAAI,WAAY,GAAI,GAAI,MAClE7G,KAAK,SAAAkB,GAAmB,IA0BYyE,EA1BZuD,EAAAhI,EAAhBiG,YAAgB,IAAA+B,EAAT,GAASA,EACvBhE,GAAMS,WAAawB,EAAK3B,WACxBN,GAAMI,QAAU,CACdC,QAAQ,EACRC,YAsBiCG,EAtBWT,GAAMS,WAuBjDA,EAAWwD,OAAO,SAACC,EAAK/B,GAQ7B,OANAA,EAAUM,KAAKlB,QAAQ,SAAAtB,GACrBA,EAAIkC,UAAYV,IAAE0C,UAAUhC,UAErBlC,EAAIkC,UAAUM,OAGhByB,EAAIvB,OAAOR,EAAUM,OAC3B,KA/BGlC,QAAS0B,EAAK1B,WAGjB6D,MAAM,WACLpE,GAAMS,WAAa,KACnBT,GAAMI,QAAU,CACdC,QAAQ,EACRC,WAAY,GACZC,QAAS,MA8DV,SAASoD,KAAuC,IAAnBH,EAAmBtC,UAAAC,OAAA,QAAAjB,IAAAgB,UAAA,IAAAA,UAAA,GACjDmD,EAAyBrE,GAAMU,cAAcS,OAASnB,GAAMU,cAAgB2C,GAChF,OAAKG,GAAaa,EAA+B3E,QAAQC,QAAQ0E,GAE1DhB,GAA4B5D,KAChC3E,KAAK,SAAA2E,GAAgB,OAAIA,EAAiBkC,IAAI,iBAAkB,GAAI,GAAI,MACxE7G,KAAK,SAAAwJ,GAAA,IAAGrC,EAAHqC,EAAGrC,KAAH,OAAejC,GAAMU,cAAgBuB,IA2CxC,SAASsC,GAAeC,EAAOC,GACpC,IAAMC,EAAQ,GAyBd,OAxBAvJ,OAAOiG,KAAKoD,EAAMG,OAAOpD,QAAQ,SAAAqD,IA2BnC,SAA8BC,EAAaC,GACzC,IAAMC,EAAa,IAAIC,KAAKF,GAExBD,IAAgBxD,MAAM4D,QAAQJ,EAAY,MAC5CA,EAAc,CAACA,IAEjB,OAAOA,EAAYK,IAAI,SAACV,GACtB,IAAMW,EAAOJ,EAAWK,QAAQL,EAAWM,WACrCC,EAAI,CAAIH,GAAJxC,OAAAxH,OAAAoK,EAAA,EAAApK,CAAaqJ,IAEvB,OADAO,EAAWK,QAAQL,EAAWM,UAAY,GACnCC,KApCaE,CAAqBhB,EAAMG,MAAMC,GAAWJ,EAAMM,WAI1DvD,QAAQ,SAAAkE,GAClB,IAAMN,EAAOM,EAAW,GAClBC,EAAOD,EAAW,GAClBE,EAAYF,EAAW,GAExBf,EAAMS,KACXT,EAAMS,GAAQ,CAAEO,KAAM,EAAGC,UAAW,IAEpCjB,EAAMS,GAAMO,MAAQA,EACpBhB,EAAMS,GAAMQ,WAAaA,MAITxK,OAAOiG,KAAKsD,GAAOkB,OAAOV,IAAI,SAAAC,GAAI,MAAI,CACxDU,SAASV,EAAM,IACfT,EAAMS,GAAMO,KACZhB,EAAMS,GAAMQ,oBCvKT,SAASG,GAAYC,GAC3B,IAAIC,EAAcD,EAAO,GACrBE,EAAkBF,EAAOG,MAAM,GAEnC,OAAOF,EAAYG,cAAgBF,EAAgBG,cCJpD,SAASC,GAAUlE,EAAWmE,GFwIvB,IAAoBlE,EACnB+C,EACAoB,EACAC,GAHmBpE,EEvIdD,EAAUG,GFwIf6C,EAAO,IAAIH,KACXuB,EAAQ,IAAIvB,KAAKG,EAAKsB,cAAetB,EAAKuB,WAAY,GAAGC,SAASC,MAAM,KAAK,GAC7EJ,EAAMrB,EAAKwB,SAASC,MAAM,KAAK,GAC9BnH,KACJ3E,KAAK,SAAA2E,GAAgB,OAAIA,EAAiBkC,IAAI,kBAAoBS,EAAc,SAAU,CAAEmE,QAAOC,OAAO,OE3I1G1L,KAAK,SAAC+L,GACL,IAAM5E,EAAOsC,GAAesC,EAAO5E,MAC7B6E,EAAMC,SAASC,eAAeV,GAEhBW,KAAKC,UAAUzF,IAAEE,IAAIQ,EAAW,aAAc,OAC9C8E,KAAKC,UAAUjF,KAGjCE,EAAUqC,MAAQ,CAAEvC,SAEtB,IAAMkF,EAASlF,EAAKiD,IAAI,SAAAkC,GAAC,OAAI,IAAIpC,KAAKoC,EAAE,IAAIC,mBAAmB,QAAS,CAAEC,QAAS,QAASC,KAAM,UAAWC,MAAO,QAASC,IAAK,cAC5H/B,EAAOzD,EAAKiD,IAAI,SAAAkC,GAAC,OAAIA,EAAE,KACvBzB,EAAY1D,EAAKiD,IAAI,SAAAkC,GAAC,OAAIA,EAAE,KAC5BM,EAAMC,KAAKD,IAALE,MAAAD,KAAIxM,OAAAoK,EAAA,EAAApK,CAAQuK,GAAR/C,OAAAxH,OAAAoK,EAAA,EAAApK,CAAiBwK,KAE3BkC,EAAc,CAClBC,KAAM,OACN7F,KAAM,CACJkF,SACAY,SAAU,CACR,CACEC,MAAO,iBAAmB7F,EAAU8F,MAAV,SAAAtF,OAA2BmD,GAAY3D,EAAU8F,MAAMC,QAAvD,KAAoE,IAC9FjG,KAAMyD,EACNyC,YAAa,EACbjL,gBAAiB,UACjBkL,YAAa,UACbC,qBAAsB,cACtBC,iBAAkB,cAClBC,YAAa,EACbC,YAAa,GACbC,iBAAkB,IAGpB,CACET,MAAO,sBAAwB7F,EAAU8F,MAAV,SAAAtF,OAA2BmD,GAAY3D,EAAU8F,MAAMC,QAAvD,KAAoE,IACnGjG,KAAM0D,EACNwC,YAAa,EACbjL,gBAAiB,cACjBkL,YAAa,MACbC,qBAAsB,cACtBC,iBAAkB,cAClBC,YAAa,EACbC,YAAa,GACbC,iBAAkB,MAIxBC,QAAS,CACPC,OAAQ,CAAEC,MAAO,CAAE,CAAEC,MAAO,CAC1BC,aAAa,EACbC,aAAcrB,EAAa,IAANA,QAK3B,IAAIsB,IAAMlC,EAAKe,KAEhBzD,MAAM,SAAC6E,GACNC,QAAQD,MAAMA,GACT9G,EAAUqC,QACbrC,EAAUqC,MAAQ,IAEpBrC,EAAUqC,MAAMyE,MAAQA,IAIftM,ICtEXwM,GDsEWxM,eAAS,WACtB,OACEtB,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,CAAMC,WAAS,GACbhO,EAAAC,EAAAC,cAAC6N,EAAA,EAAKE,IAAN,KACEjO,EAAAC,EAAAC,cAAC6N,EAAA,EAAKG,OAAN,CAAavM,MAAO,CAAEwM,WAAY,SAChCnO,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAQF,KAAK,UAAb,WACAlC,EAAAC,EAAAC,cAAA,QAAMyB,MAAO,CACXyM,WAAY,QACZC,OAAQ,iBACRvM,QAAS,UACTF,MAAO,YACP0M,aAAc,QAEb3J,GAAMG,UAIb9E,EAAAC,EAAAC,cAACqO,EAAA,EAAD,MACAvO,EAAAC,EAAAC,cAAC6N,EAAA,EAAKE,IAAN,KAEGtJ,GAAMS,WACJoJ,OAAO,SAAA1H,GAAS,OAAIA,EAAUE,YAAcF,EAAUM,KAAKtB,SAC3D+D,IAAI,SAAC/C,EAAW2H,GACf,IAAIxD,EAAW,6BAAA3D,OAA6BR,EAAUG,IAAOwH,EAI7D,OAFAzD,GAAUlE,EAAWmE,GAGnBjL,EAAAC,EAAAC,cAAC6N,EAAA,EAAKG,OAAN,CAAaQ,MAAO,GAAIC,WAAY,EAAGxI,IAAKW,EAAUG,GAAItF,MAAO,CAAEiN,aAAc,SAC/E5O,EAAAC,EAAAC,cAAC2O,GAAD,CAAOzH,KAAMN,EAAUM,OACtBN,EAAUgI,UACT9O,EAAAC,EAAAC,cAAC6O,EAAA,EAAD,CAASC,MAAI,GACXhP,EAAAC,EAAAC,cAAA,gCACuB4G,EAAUgI,SAASG,UAD1C,oBACsEnI,EAAUgI,SAASI,WADzF,iBAKFpI,EAAUqC,MAGRrC,EAAU8G,MACR5N,EAAAC,EAAAC,cAAC6O,EAAA,EAAD,CAASnB,OAAK,EAACuB,QAASrI,EAAU8G,MAAMwB,aACtC,KAJNpP,EAAAC,EAAAC,cAACmP,EAAA,EAAD,CAAQC,QAAM,IAMhBtP,EAAAC,EAAAC,cAAA,UAAQ+G,GAAIgE,WAStBsE,GAAQ,SAAA5O,GAAc,IAAXyG,EAAWzG,EAAXyG,KACXoI,EAAepI,EAAK,GAAGqI,QAAQT,KAAKU,MAEpC3K,EACF/E,EAAAC,EAAAC,cAACyP,EAAA,EAAD,KACIvI,EAAKwB,OAAO,SAACC,EAAKjE,GAAN,OAAciE,EAAIvB,OAC9BtH,EAAAC,EAAAC,cAACyP,EAAA,EAAKC,KAAN,CAAWzJ,IAAKvB,EAAIqC,IAAKrC,EAAI6K,QAAQT,KAAKU,SACzC,KAIHG,EAAgBzI,EAAKtB,OAAS,EAElC,OACE9F,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAQF,KAAK,UAAb,aACa2N,EACT7P,EAAAC,EAAAC,cAAC4P,EAAA,EAAD,CACEC,QAAU/P,EAAAC,EAAAC,cAAA,KAAGyB,MAAO,CAAEqO,OAAQ,YAAcR,EAAlC,QAAqDK,EAArD,YACVV,QAAUpK,EACVkL,GAAI,CAAC,QAAS,SACdC,SAAS,iBAGXV,sDCvJFW,GAAW,CACfC,WAAY/M,EACZgN,SAAU9M,GAKL,SAAS+M,KACd,OAAO3L,GAAMQ,YAqDR,SAASoL,GAAMC,EAAOC,GAC3B,IAAIC,EAAmB,IAAIC,KAAY,CACrCC,SAAUJ,GAAS,GACnBK,KAAM,IAAIC,KAAgBX,MAG5B,GAAIK,GAASC,EACX,OAAO,IAAIpM,QAAQ,SAACC,EAASyM,GAC3B,IAAMC,EAAwB,IAAIC,KAAsB,CACtDL,SAAUJ,EACVU,SAAUT,IAGZC,EAAiBS,iBAAiBH,EAAuB,CACvDI,UAAW,SAAC5F,GACV7G,GAAMQ,YAAcuL,EAEpBW,GAAe1M,GAAMQ,aAClB1F,KAAK6E,GACLyE,MAAMgI,IAGXO,UAAWP,MAGN9N,OAAOsO,SAASC,OAEzBd,EAAiBe,kBAAoB,GAErCxO,OAAOsO,SAASC,KACbE,QAAQ,KAAK,IACbnG,MAAM,KACN1B,IAAI,SAAA8H,GAAK,OAAIA,EAAMpG,MAAM,OACzBrF,QAAQ,SAAAyL,GAEU,aAAbA,EAAM,KACRjB,EAAiBe,kBAAkBG,QAAU,CAAE3N,SAAU0N,EAAM,KAEhD,iBAAbA,EAAM,KACRjB,EAAiBe,kBAAkBI,YAAc,CAAE5N,SAAU0N,EAAM,OAOrEjB,EAAiBe,kBAAkBG,UACrCE,aAAaC,QAAQnG,KAAKC,UAAUsE,IAAWvE,KAAKC,UAAU6E,EAAiBe,oBAE/E9M,GAAMQ,YAAcuL,EAEpBW,GAAe1M,GAAMQ,eAK3B,SAASkM,GAAelM,GAIpB,OAHAnB,GAAqBmB,EAAYsM,kBAAkBI,YAAY5N,UAC/DiE,KAEO9D,KACJ3E,KAAK,SAAA2E,GAAgB,OAAIA,EAAiB4N,KAAK,UAAW,GAAI,GAAI,MAGlE,SAASC,KACVtN,GAAMQ,cACRR,GAAMQ,YAAY+M,UAClBvN,GAAM4B,gBACNuL,aAAatM,QAET/B,IAEFR,OAAOsO,SAAP,GAAAjK,OAAqB7D,EAArB,sBAAA6D,OAAuD/D,EAAvD,gBAAA+D,OAAqFrE,OAAOsO,SAASY,SAArG,MAAA7K,OAAkHrE,OAAOsO,SAASa,uBC3HzH9Q,mBAAS,WACtB,IAAM+Q,GAAe1N,GAAMI,QAAQC,OAC7BsN,IAAmBlM,IAAEE,IAAI3B,GAAO,6BAChC4N,IAAmBnM,IAAEE,IAAI3B,GAAO,0BAKhC6N,EACJjN,KAAK1E,MAAMxB,KAAKoT,OAAOC,OACtBJ,GAAkB3N,GAAMI,QAAQE,WAAW,GAAGgC,IAC9CsL,GAAkB5N,GAAMI,QAAQG,QAAQ,GAAG+B,GAM9C,OACEjH,EAAAC,EAAAC,cAACyS,GAAA,EAAD7S,OAAAkB,OAAA,CAAM4R,UAAQ,EAACnR,UAAQ,EAACoR,UAAQ,EAAClR,MAAO,CAAEI,OAAQ,EAAGuM,aAAc,IAAS/I,KAAK1E,OAC9EwR,EACCrS,EAAAC,EAAAC,cAACmP,EAAA,EAAD,CAAQC,QAAM,IAEbgD,GAAkBC,EACjBvS,EAAAC,EAAAC,cAACF,EAAAC,EAAMsB,SAAP,KACG+Q,GAAkBtS,EAAAC,EAAAC,cAAC4S,GAAD,CAAepD,MAAM,eAAeqD,WAAYpO,GAAMI,QAAQE,WAAYuN,cAAeA,IAC3GD,GAAkBvS,EAAAC,EAAAC,cAAC4S,GAAD,CAAepD,MAAM,mBAAmBqD,WAAYpO,GAAMI,QAAQG,QAASsN,cAAeA,KAG/GxS,EAAAC,EAAAC,cAAA,KAAGyB,MAAO,CAAEG,QAAS,YAAaF,MAAO,eAAzC,wBAOV,SAASkR,GAATnS,GAA6D,IAApC+O,EAAoC/O,EAApC+O,MAAOqD,EAA6BpS,EAA7BoS,WAAYP,EAAiB7R,EAAjB6R,cAC1C,OACExS,EAAAC,EAAAC,cAACF,EAAAC,EAAMsB,SAAP,KACEvB,EAAAC,EAAAC,cAACyS,GAAA,EAAKvQ,OAAN,CACET,MAAO,CACLG,QAAS,qBACTF,MAAO,mBAGR8N,GAEFqD,EAAWlJ,IAAI,SAAAjF,GAAG,OACjB5E,EAAAC,EAAAC,cAACyS,GAAA,EAAK/C,KAAN,CACEzJ,IAAKvB,EAAIqC,GACT5E,GAAIlB,IACJC,GAAE,SAAAkG,OAAW1C,EAAIqC,IACjBqI,OAvDV,SAAmBoD,EAAOF,GACxB,QAAQA,GAAiBE,IAAUF,EAsDnBQ,CAASpO,EAAIqC,GAAGmI,WAAYoD,EAAcpD,aAEjDxK,EAAI6K,QAAQT,KAAKU,UCxDrB,IAKDuD,GAAkB3R,YAAS,SAAAX,GAAuB,IAApBuS,EAAoBvS,EAApBuS,cAC5BC,EAAWD,EAAcC,WACzBf,EAAOc,EAAcd,OACrBgB,EAAeF,EAAcE,eAEnC,OACEpT,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAWC,OAAK,EAACpB,UAAU,OAAO2R,UAAU,WAAW1R,MAAO,CAAEG,QAAS,aACvE9B,EAAAC,EAAAC,cAAA,OAAKyB,MAAO,CAAE2R,QAAS,SACrBtT,EAAAC,EAAAC,cAAA,OAAKyB,MAAO,CAAE4R,KAAM,WAAYC,YAAa,SAC3CxT,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAOE,KAAK,QAAQC,IAAKwC,GAAMC,IAAI2C,QAErCvH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAQC,GAAG,MAAMsC,GAAMC,IAAI6K,QAAQT,KAAKU,OACxC1P,EAAAC,EAAAC,cAAA,OAAKyB,MAAO,CAAE2R,QAAS,SACrBtT,EAAAC,EAAAC,cAAA,OAAKyB,MAAO,CAAE6R,YAAa,SACxB7O,GAAMC,IAAIM,SACTlF,EAAAC,EAAAC,cAAA,KAAGyB,MAAO,CAAE8R,WAAY,SAAxB,WAEFzT,EAAAC,EAAAC,cAAA,KAAGyB,MAAO,CAAE8R,WAAY,SAAxB,aAGFzT,EAAAC,EAAAC,cAAA,WACGyE,GAAMC,IAAIM,SACTlF,EAAAC,EAAAC,cAAA,SAAIyE,GAAMC,IAAI6K,QAAQT,KAAK0E,SAE7B1T,EAAAC,EAAAC,cAAA,oBAAYkS,EAAMe,KAItBnT,EAAAC,EAAAC,cAAA,SAAIkT,GACJpT,EAAAC,EAAAC,cAACyT,GAAD,WAOJC,GAAsBtS,YAAQ,SAAAuS,GAAA,SAAAD,IAAA,IAAAE,EAAApO,EAAA5F,OAAAiU,EAAA,EAAAjU,CAAAyF,KAAAqO,GAAA,QAAAhO,EAAAC,UAAAC,OAAAkO,EAAA,IAAAhO,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAA+N,EAAA/N,GAAAJ,UAAAI,GAAA,OAAAP,EAAA5F,OAAAmU,EAAA,EAAAnU,CAAAyF,MAAAuO,EAAAhU,OAAAoU,EAAA,EAAApU,CAAA8T,IAAAO,KAAA5H,MAAAuH,EAAA,CAAAvO,MAAA+B,OAAA0M,MAClCI,MAAQ,GAD0B1O,EAAA,OAAA5F,OAAAuU,EAAA,EAAAvU,CAAA8T,EAAAC,GAAA/T,OAAAwU,EAAA,EAAAxU,CAAA8T,EAAA,EAAAzN,IAAA,SAAAsC,MAAA,WAGzB,IACC7D,EAAQD,GAARC,IACR,OACGA,GAAO0L,KAAsB1L,EAAIM,QAM9BlF,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAQC,GAAG,KAAKT,MAAM,YAAtB,gEALFgD,EAAIoC,WACFhH,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAQ8R,QAAS,kBLiECxN,EKjEiBnC,EAAIkC,UAAUG,GLkElD7C,KACJ3E,KAAK,SAAA2E,GAAgB,OAAIA,EAAiBoQ,OAAjB,kBAAAlN,OAA0CP,GAAe,GAAI,MACtFtH,KAAK,kBAAM6I,IAAoB,KAH7B,IAAqBvB,IKjElB,eAEA/G,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAQ8R,QAAS,kBLyDDxN,EKzDiBnC,EAAIkC,UAAUG,GL0DhD7C,KACJ3E,KAAK,SAAA2E,GAAgB,OAAIA,EAAiBqQ,IAAI,kBAAoB1N,EAAa,GAAI,MACnFtH,KAAK,kBAAM6I,IAAoB,KAH7B,IAAmBvB,IKzDhB,aAEyG,SAZ/E6M,EAAA,CAAmCc,IAAMC,YAkB9DC,GA5DoB,iBAAO,CAAEC,WAAY,CAAEC,cAAe7B,MCO1D3R,eAAQ,SAAAuS,GAAA,SAAAkB,IAAA,IAAAjB,EAAApO,EAAA5F,OAAAiU,EAAA,EAAAjU,CAAAyF,KAAAwP,GAAA,QAAAnP,EAAAC,UAAAC,OAAAkO,EAAA,IAAAhO,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAA+N,EAAA/N,GAAAJ,UAAAI,GAAA,OAAAP,EAAA5F,OAAAmU,EAAA,EAAAnU,CAAAyF,MAAAuO,EAAAhU,OAAAoU,EAAA,EAAApU,CAAAiV,IAAAZ,KAAA5H,MAAAuH,EAAA,CAAAvO,MAAA+B,OAAA0M,MAIrBgB,UAAY,YNsDP,SAAgBtC,GAAyB,IAAlBuC,EAAkBpP,UAAAC,OAAA,QAAAjB,IAAAgB,UAAA,IAAAA,UAAA,GAC9C,OAAOwC,KACJ5I,KAAK,WACJ,IAAIyV,EAEAC,EAAU,GAAG7N,OAAO3C,GAAMI,QAAQE,WAAYN,GAAMI,QAAQG,SAchE,OAZIiQ,EAAQrP,SAERoP,EADY,QAAVxC,GAA6B,UAAVA,EACXyC,EAAQ,GAIRA,EAAQjO,KAAK,SAAAtC,GAAG,OAAIA,EAAIqC,GAAGmI,aAAesD,KAIpDuC,IAAUtQ,GAAMC,IAAMsQ,GAEnBA,KMxETE,CAAO1P,EAAK7E,MAAMwU,MAAM5C,OAAOC,OAAS,OAAO,GAC5CjT,KAAK,SAAAmF,GACJ,GAAIA,EAAK,CACP,IAAI0Q,EAAkB,CACpBC,OAAQ,wBACRC,QAAS,CAACZ,IACVa,uBAAwB,GACxBC,KAAM9Q,EAAI6K,QACVkG,WAAY,WACNhR,GAAMG,QACR8Q,EAAUC,mBAAmB,UAAWlR,GAAMG,UAGhDwL,aACKgF,EAAgBG,uBAEzB,IAAIG,EAAYE,KAAUR,OArBb5P,EAAA,OAAA5F,OAAAuU,EAAA,EAAAvU,CAAAiV,EAAAlB,GAAA/T,OAAAwU,EAAA,EAAAxU,CAAAiV,EAAA,EAAA5O,IAAA,oBAAAsC,MAAA,WACClD,KAAKyP,cADN,CAAA7O,IAAA,qBAAAsC,MAAA,WAEElD,KAAKyP,cAFP,CAAA7O,IAAA,SAAAsC,MAAA,WA2BnB,IAAIsN,EACAC,EAUJ,OARKrR,GAAMI,QAAQE,WAAWa,QAAWnB,GAAMI,QAAQG,QAAQY,OAGnDnB,GAAMC,MAChBmR,EAAW,cACXC,EAAS,oCAJTD,EAAW,oBACXC,EAAS,oGAOThW,EAAAC,EAAAC,cAAA,OAAKyB,MAAO,CAAE2R,QAAS,OAAQC,KAAM,WAAY0C,SAAU,WACzDjW,EAAAC,EAAAC,cAACgW,GAAD,CAAU7W,KAAMkG,KAAK1E,MAAMwU,MAAO1T,MAAO,CAAE4R,KAAM,cACjDvT,EAAAC,EAAAC,cAAA,OAAKmT,UAAU,kBAAkB1R,MAAO,CAAE4R,KAAM,WAAY0C,SAAU,SACpEjW,EAAAC,EAAAC,cAAA,OAAKmT,UAAU,kBAAkBpM,GAAG,uBAAuBtF,MAAO,CAAEG,QAAS,WAC1EiU,GAAeC,GACdhW,EAAAC,EAAAC,cAACF,EAAAC,EAAMsB,SAAP,KACEvB,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAQC,GAAG,KAAK8T,MAAI,EAACzU,UAAU,SAASC,MAAO,CAAEG,QAAS,aACxD9B,EAAAC,EAAAC,cAACkW,GAAA,EAAD,CAAMC,KAAK,eAAeC,UAAQ,IAClCtW,EAAAC,EAAAC,cAACkC,EAAA,EAAOmU,QAAR,KAAiBR,IAEnB/V,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAAWlD,MAAI,EAAC+B,UAAU,aACxB1B,EAAAC,EAAAC,cAAA,SAAI8V,YAlDCjB,EAAA,CAAwBL,IAAMC,YClBhC6B,8MACnBpC,MAAQ,CACNqC,WAAW,EACXC,QAAS,MAGXC,cAAgB,WACdjR,EAAKkR,SAAS,CAAEH,WAAW,6EAIzB,OACEzW,EAAAC,EAAAC,cAAC6O,EAAA,EAAD,CACE8H,QAAStR,KAAK6O,MAAMqC,UACpBK,UAAQ,EACRC,UAAQ,EACRZ,KAAK,eACLa,UAAWzR,KAAKoR,cAChBpU,OAAO,QACP4M,QAAS5J,KAAK6O,MAAMsC,iBAnBUhC,IAAMC,WCKzBsC,8MACnBC,sBAAiBjU,OAAOsO,SAASY,sBAAalP,OAAOsO,SAASa,iBAE9D+E,WAAa,WACXlU,OAAOsO,SAAP,GAAAjK,OAAqB7D,EAArB,yCAAA6D,OAA0E/D,EAA1E,kBAAA+D,OAA0G5B,EAAKwR,gBAGjHE,YAAc,WACZnU,OAAOsO,SAAP,GAAAjK,OAAqBxD,GAArB,yCAAAwD,OAA+E3D,GAA/E,kBAAA2D,OAAoH5B,EAAKwR,sFAIzH,OAAO3R,KAAK1E,MAAMwW,SAAWrX,EAAAC,EAAAC,cAACoX,EAAA,EAAD,CAAUlW,GAAG,UACxCpB,EAAAC,EAAAC,cAAC4P,EAAA,EAAD,CACE8C,UAAQ,EACR2E,MAAI,EACJxH,QAAUxK,KAAK1E,MAAMkP,QACrBZ,QACEnP,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuC,EAAA,EAAO+U,MAAR,KACExX,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAQP,KAAK,QAAQqS,QAAShP,KAAK6R,aAAnC,SACApX,EAAAC,EAAAC,cAACuC,EAAA,EAAOgV,GAAR,MACAzX,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAQiV,SAAO,EAACxV,KAAK,QAAQqS,QAAShP,KAAK4R,YAA3C,UAINlH,GAAG,QACHC,SAAS,wBA3BmBwE,IAAMC,WCArBgD,8MACnBT,sBAAiBjU,OAAOsO,SAASY,sBAAalP,OAAOsO,SAASa,uFAG5D,OAAO7M,KAAK1E,MAAMwW,SAAWrX,EAAAC,EAAAC,cAACoX,EAAA,EAAD,CAAUlW,GAAG,UACtCpB,EAAAC,EAAAC,cAACyS,GAAA,EAAK/C,KAAN,CAAWzJ,IAAI,WAAW9D,GAAG,IAClBzB,KAAI,GAAA0G,OAAK7D,EAAL,0CAAA6D,OAA2D/D,EAA3D,kBAAA+D,OAA2F/B,KAAK2R,cAD/G,mBAL8BxC,IAAMC,WC8C7BiD,GAtCOtW,YAAQ,SAAAuS,GAAA,SAAA+D,IAAA,OAAA9X,OAAAiU,EAAA,EAAAjU,CAAAyF,KAAAqS,GAAA9X,OAAAmU,EAAA,EAAAnU,CAAAyF,KAAAzF,OAAAoU,EAAA,EAAApU,CAAA8X,GAAArL,MAAAhH,KAAAM,YAAA,OAAA/F,OAAAuU,EAAA,EAAAvU,CAAA8X,EAAA/D,GAAA/T,OAAAwU,EAAA,EAAAxU,CAAA8X,EAAA,EAAAzR,IAAA,iBAAAsC,MAAA,SAEXoP,GACb,OAAIA,EAEA7X,EAAAC,EAAAC,cAACyS,GAAA,EAAKA,KAAN,CAAWzC,SAAS,SAClBlQ,EAAAC,EAAAC,cAACyS,GAAA,EAAK/C,KAAN,CAAWzJ,IAAI,UAAU9D,GAAG,IAAIkS,QAAStC,IAAzC,YACAjS,EAAAC,EAAAC,cAACyS,GAAA,EAAK/C,KAAN,CAAWzJ,IAAI,YAAY9D,GAAIlB,IAAMC,GAAG,cAAxC,iBAKApB,EAAAC,EAAAC,cAACyS,GAAA,EAAKA,KAAN,CAAWzC,SAAS,SAClBlQ,EAAAC,EAAAC,cAAC4X,GAAD,CACI3R,IAAI,SACJ4J,QAAS/P,EAAAC,EAAAC,cAACyS,GAAA,EAAK/C,KAAN,CAAWvN,GAAG,KAAd,aACbrC,EAAAC,EAAAC,cAAC6X,GAAD,SAhBgB,CAAA5R,IAAA,SAAAsC,MAAA,WAuBxB,OAAOzI,EAAAC,EAAAC,cAACyS,GAAA,EAAD,CAAMC,UAAQ,EAACoF,YAAU,EAACnF,UAAQ,EAAClR,MAAO,CAAE4R,KAAM,aACvDvT,EAAAC,EAAAC,cAACyS,GAAA,EAAK/C,KAAN,CAAWvN,GAAIlB,IAAMC,GAAG,KACtBpB,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAOE,KAAK,OAAOC,IAAI,+BAA+BR,MAAO,CAAEsW,aAAc,UAC5E/Y,EAAUoD,KAAKoN,OAGlB1P,EAAAC,EAAAC,cAACyS,GAAA,EAAK/C,KAAN,CAAWvN,GAAIlB,IAAMC,GAAG,oBAAoBlC,EAAU6D,eAAe2M,OACrE1P,EAAAC,EAAAC,cAACyS,GAAA,EAAK/C,KAAN,CAAWvN,GAAIlB,IAAMC,GAAG,SAASlC,EAAUgZ,KAAKxI,OAE/CnK,KAAK4S,eAAe7H,WAhCCsH,EAAA,CACPlD,IAAMC,YCMvByD,uBACJ,SAAAA,IAAc,IAAA1S,EAMZ,GANY5F,OAAAiU,EAAA,EAAAjU,CAAAyF,KAAA6S,GACZ1S,EAAA5F,OAAAmU,EAAA,EAAAnU,CAAAyF,KAAAzF,OAAAoU,EAAA,EAAApU,CAAAsY,GAAAjE,KAAA5O,ORHG,WAKL,GAHAuI,GAAW,IAAIgD,KAAgBX,IAC/BxL,GAAMQ,YAAc2I,GAASuK,iBAEH,OAAtB1T,GAAMQ,YACRR,GAAMQ,YAAYmT,WAAW,SAASC,EAAKC,GACzC,GAAID,EAGF,OAFAtG,UACApE,QAAQD,MAAM2K,GAIhBlH,GAAe1M,GAAMQ,mBAElB,CACL,IAAIsM,EAAoBK,aAAa2G,QAAQ7M,KAAKC,UAAUsE,KACxDsB,IAEF9M,GAAMQ,YAAc,IAAIwL,KAAY,CAClCC,SAAU,GACVC,KAAM/C,KAGRnJ,GAAMQ,YAAYsM,kBAAoB7F,KAAK8M,MAAMjH,GAEjDJ,GAAe1M,GAAMQ,cAEvBnB,MQxBA2U,GAII1V,OAAOsO,SAASC,MAAoC,MAA5BvO,OAAOsO,SAASC,KAAK,GAAY,CAC3D,IAAMoH,EAAY3V,OAAOsO,SAASC,KAAKqH,UAAU,GACjD5V,OAAO6V,QAAQC,UAAU,GAAI,YAAaH,GARhC,OAAAlT,wEAaZ,OACE1F,EAAAC,EAAAC,cAAC8Y,EAAA,EAAD,KACEhZ,EAAAC,EAAAC,cAACF,EAAAC,EAAMsB,SAAP,KACEvB,EAAAC,EAAAC,cAAC+Y,GAAD,MACAjZ,EAAAC,EAAAC,cAACgZ,GAAD,MACAlZ,EAAAC,EAAAC,cAACiZ,EAAA,EAAD,KACEnZ,EAAAC,EAAAC,cAACkZ,EAAA,EAAD,CAAOC,OAAK,EAACha,KAAK,IAAIia,UAAWhX,IACjCtC,EAAAC,EAAAC,cAACkZ,EAAA,EAAD,CAAO/Z,KAAK,mBAAmBia,UAAWvW,IAC1C/C,EAAAC,EAAAC,cAACkZ,EAAA,EAAD,CAAO/Z,KAAK,aAAaia,UAAWC,KACpCvZ,EAAAC,EAAAC,cAACkZ,EAAA,EAAD,CAAOC,OAAK,EAACha,KAAK,QAAQia,UAAWE,KACrCxZ,EAAAC,EAAAC,cAACkZ,EAAA,EAAD,CAAO/Z,KAAK,eAAeia,UAAWE,KACtCxZ,EAAAC,EAAAC,cAACkZ,EAAA,EAAD,CAAO/Z,KAAK,SAASoa,OAAQ,kBAAOlJ,KAASvQ,EAAAC,EAAAC,cAACoX,EAAA,EAAD,CAAUlW,GAAG,SAC1DpB,EAAAC,EAAAC,cAACkZ,EAAA,EAAD,CAAO/Z,KAAK,UAAUoa,OAAQ,kBAAOxH,KAAUjS,EAAAC,EAAAC,cAACoX,EAAA,EAAD,CAAUlW,GAAG,SAC5DpB,EAAAC,EAAAC,cAACkZ,EAAA,EAAD,CAAOE,UAAW,kBAAMtZ,EAAAC,EAAAC,cAAA,yCA3BlBwU,IAAMC,YAmCxB+E,IAASD,OACPzZ,EAAAC,EAAAC,cAACyZ,GAAD,MACAjO,SAASC,eAAe","file":"static/js/main.97adf8c0.chunk.js","sourcesContent":["// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\n\n// react-router\nimport { Link } from 'react-router-dom'\n\n// mobx\nimport { observable } from 'mobx'\n\n// markdown parsing\nimport frontmatter from 'front-matter'\nimport Markdown from 'react-markdown/with-html'\n\nexport const fragments = observable({})\n\nloadHtml('/custom-content/content-fragments/GettingStarted.md', 'GettingStarted')\nloadHtml('/custom-content/content-fragments/Home.md', 'Home')\nloadHtml('/custom-content/content-fragments/APIs.md', 'APIs')\n\n/**\n * \n * Pre-load the custom-content markdown, parses its frontmatter, and renders it as JSX. This method is asynchronous and doesn't actually return anything -- instead, it acts on a MobX Observable -- the fragment. The fragment is an object with a `jsx` property that maps to the rendered component, and any number of other properties collected from the front-matter.\n * \n * @param {String} path   Path to the file to load in. Should be a markdown file.\n * @param {String} fragment   Name of the fragment. Determines where rendered data gets stored.\n * \n * @returns {Object} \n */\nfunction loadHtml(path, fragment) {\n  // if we want to display a loading indicator, this would be where\n  fragments[fragment] = { jsx: () => null }\n\n  fetch(path).then(response => response.text().then(text => {\n    let parsedMarkdown = frontmatter(text)\n\n    fragments[fragment] = {\n      jsx: () => (\n        <Markdown \n          escapeHtml={false} \n          source={parsedMarkdown.body}\n          renderers={renderers}\n        />\n      ),\n      ...parsedMarkdown.attributes\n    }\n  }))\n}\n\n/**\n * Renderers is a map of node type to component. \n * \n * In this case, we only override links. Any time react-markdown tries to render a link, it'll render this component. Normal links will work, but the cause a full page reload. We don't want that, so we can replacing them with react-router Links. However, replacing external links with react-router Links causes them to not work at all. We don't want that either, so we attempt to determine if a link is external or not, and use `Link` or `a` appropriately.\n */\nconst renderers = {\n  link: ({ href, ...props }) => {\n    // if absolute url, use an `a` tag\n    // https://stackoverflow.com/a/19709846/4060061\n    if (/^(?:[a-z]+:)?\\/\\//i.test(href))\n      return <a href={href} target=\"_blank\" rel=\"noopener noreferrer\" {...props} />\n\n    // replace links with react-router-dom tags so that they \n    return <Link to={href} {...props} />\n  }\n}","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport AWS from 'aws-sdk'\n\nexport const awsRegion = window.config.region\nexport const cognitoRegion = window.config.region\nexport const cognitoUserPoolId = window.config.userPoolId\nexport const cognitoClientId = window.config.userPoolClientId\nexport const cognitoDomain = window.config.userPoolDomain\nexport const cognitoAdminUserPoolId = window.config.adminUserPoolId\nexport const cognitoAdminClientId = window.config.adminUserPoolClientId\nexport const cognitoAdminDomain = window.config.adminUserPoolDomain\n\nAWS.config.region = cognitoRegion\n\nlet cachedClient\n\nexport function initApiGatewayClient(jwtToken) {\n  cachedClient = window.apigClientFactory.newClient({\n    region: awsRegion,\n    jwtToken: jwtToken\n  })\n}\n\nexport function apiGatewayClient() {\n  if (cachedClient) return Promise.resolve(cachedClient)\n  \n  return new Promise(resolve => {\n    const poller = setInterval(() => {\n      if (cachedClient) {\n        clearInterval(poller)\n        resolve(cachedClient)\n      }\n    }, 100)\n  })\n}\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\n\n// mobx\nimport { observer } from 'mobx-react'\n\n// fragments\nimport { fragments } from 'services/get-fragments'\n\n// react-router\nimport { Link } from 'react-router-dom'\n\n// semantic-ui\nimport { Header, Segment, Container, Image, Button } from 'semantic-ui-react'\n\nexport const HomePage = observer(() => (\n  <React.Fragment>\n    <Segment vertical textAlign='center' style={{ color: \"whitesmoke\", backgroundColor: \"slategray\", padding: \"40px 0px\", margin: \"0px !important\" }}>\n      <Image centered size='small' src='/custom-content/home-image.png' />\n      <Header as='h1' style={{ color: \"whitesmoke\" }}>{fragments.Home.header}</Header>\n      <p>{fragments.Home.tagline}</p>\n      <Link to=\"/getting-started\"><Button positive>{fragments.Home.gettingStartedButton}</Button></Link>\n      <Link to=\"/apis\" style={{ padding: \"0.78571429em 1.5em 0.78571429em\", color: \"white\" }}>{fragments.Home.apiListButton}</Link>\n    </Segment>\n    <Segment vertical style={{ padding: \"40px 0px\", margin: \"0 !important\" }}>\n      <Container fluid text textAlign='justified'>\n        <fragments.Home.jsx />\n      </Container>\n    </Segment>\n  </React.Fragment>\n))\n\nexport default HomePage\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\n\n// mobx\nimport { observer } from 'mobx-react'\n\n// fragments\nimport { fragments } from 'services/get-fragments'\n\n// semantic-ui\nimport { Container } from 'semantic-ui-react'\n\nexport default observer(() => (\n  <Container style={{ padding: \"40px\" }}>\n    <fragments.GettingStarted.jsx />\n  </Container>\n))\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { observable, reaction } from 'mobx'\nimport _ from 'lodash'\n\nimport { getSubscribedUsagePlan } from 'services/api-catalog'\n\n/**\n * A function that returns a new object contain the default store\n */\nfunction storeDefaults() {\n  return {\n    api: undefined,\n    apiKey: undefined,\n    \n    apiList: {\n      loaded: false,\n      apiGateway: [],\n      generic: []\n    },\n\n    cognitoUser: undefined,\n\n    usagePlans: [],\n\n    subscriptions: []\n  }\n}\n\n/**\n * Trick for logging the store: clone the object. i.e. _.cloneDeep(store) or JSON.parse(JSON.stringify(store))\n */\nexport const store = observable({\n  ...(storeDefaults()),\n\n  initialize() {\n    Object.assign(this, storeDefaults())\n\n    return this\n  },\n\n  /**\n   * Reset the entire store to the original values\n   */\n  clear() {\n    return this.initialize()\n  },\n\n  /**\n   * Reset specific keys on the store to their initial values\n   * \n   * @param {string[]} keys   The keys that should be reset. Accepts lodash paths. (e.g. )\n   */\n  reset(...keys) {\n    const defaults = storeDefaults()\n    keys.forEach(key =>_.set(this, key, _.get(defaults, key)))\n    return this\n  },\n\n  resetUserData() {\n    this.reset('apiKey', 'cognitoUser', 'subscriptions')\n  }\n})\n\n/**\n * \n * A short-hand function for creating reactions with protections against cyclical errors.\n * \n * @param {Function} triggerFn   A function that determines when fire the effectFn and what to pass to the effectFn.\n * @param {Function} effectFn   The side-effect to run when the data tracked by the triggerFn is changed.\n * \n * A note on MobX reactions: the side effect will \"only react to data that was accessed in the data expression\" and will only fire \"when the data returned by the expression has changed\". (https://mobx.js.org/refguide/reaction.html)\n */\nfunction reactTo(triggerFn, effectFn) {\n  // note -- had issues with cyclical reactions in the past\n  // the comments below will fix them if they come up again\n  // DO NOT REMOVE THEM\n\n  // function restartReaction() {\n    reaction(\n      triggerFn,\n      (data, action) => {\n        // action.dispose() // clear this \"listener\" so we don't cycle\n        \n        effectFn(data, action)\n\n        // restartReaction() // restart the reaction after doing stuff to the data\n      }\n    )\n  // }\n\n  // restartReaction()\n}\n\nreactTo(\n  () => ({ subscriptions: store.subscriptions, usagePlans: store.usagePlans }),\n  ({ usagePlans }) => {\n    updateSubscriptionStatus(usagePlans)\n  }\n)\n\nreactTo(\n  () => [].concat(store.apiList.apiGateway, store.apiList.generic),\n  apiList => {\n    fetchApiImage(apiList)\n  }\n)\n\n/**\n * \n */\nfunction fetchApiImage(apiList) {\n  apiList.forEach(api => {\n    if (!api.logo) {\n      let specificLogo = `/custom-content/api-logos/${api.id}_${api.stage}.png`\n  \n      // fetch automatically follows redirects; setting redirect to `manual` prevents this\n      // we need to prevent it so that we can accurately determine if the image exists\n      fetch(specificLogo, { headers: { Accept: \"image/png\" }, redirect: \"manual\" }).then(response => {\n        if (response.ok)\n          api.logo = specificLogo\n\n        else api.logo = '/custom-content/api-logos/default.png'\n      })\n    }\n  })\n}\n\n/**\n * A helper function that simple re-builds the subscribed status for each api in the catalog.\n * \n * Should be run every time either the catalog updates or the \n */\nfunction updateSubscriptionStatus(usagePlans) {\n  if (usagePlans)\n    usagePlans.forEach(usagePlan => {\n      let subscribed = !!getSubscribedUsagePlan(usagePlan.id)\n      usagePlan.subscribed = subscribed\n\n      usagePlan.apis.forEach(api => api.subscribed = subscribed)\n    })\n}\n\nexport default store.initialize()\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport _ from 'lodash'\n\nimport { apiGatewayClient } from './api'\nimport { store } from './state'\n\n/* Catalog and API Utils */\n\n/**\n * \n * Does all operations to get user data at once.\n * \n * @param {Boolean} bustCache=true   Ignore the cache and re-make the calls? Defaults to true.\n */\nexport function updateAllUserData(bustCache = true) {\n  return Promise.all([\n    updateUsagePlansAndApisList(bustCache),\n    updateSubscriptions(bustCache),\n    updateApiKey(bustCache)\n  ])\n}\n\n/**\n * \n * Update the catalog for the current user. Both request and response are cached, so unless the cache is busted, this should only ever make one network call.\n * \n * @param {Boolean} [bustCache=false]   Ignore the cache and re-make the network call. Defaults to false.\n * \n */\nexport function updateUsagePlansAndApisList(bustCache = false) {\n  // if we've already tried, just return that promise\n  if (!bustCache && catalogPromiseCache) return catalogPromiseCache\n\n  return catalogPromiseCache = apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.get('/catalog', {}, {}, {}))\n    .then(({ data = [] }) => {\n      store.usagePlans = data.apiGateway\n      store.apiList = {\n        loaded: true,\n        apiGateway: getApiGatewayApisFromUsagePlans(store.usagePlans), // MUST create\n        generic: data.generic\n      }\n    })\n    .catch(() => {\n      store.usagePlans = null\n      store.apiList = {\n        loaded: true,\n        apiGateway: [],\n        generic: []\n      }\n    })\n}\nlet catalogPromiseCache // WARNING: Don't touch this. Should only be used by updateCatalogAndApisList.\n\n/**\n * A function that takes an input usage plans and creates an list of apis out of it.\n * \n * - Makes sure each api has a non-recursive 'usagePlan' object\n * \n * returns an array of apis\n */\nfunction getApiGatewayApisFromUsagePlans(usagePlans) {\n  return usagePlans.reduce((acc, usagePlan) => {\n\n    usagePlan.apis.forEach(api => {\n      api.usagePlan = _.cloneDeep(usagePlan)\n      // remove the apis from the cloned usagePlan so we don't go circular\n      delete api.usagePlan.apis\n    })\n\n    return acc.concat(usagePlan.apis)\n  }, [])\n}\n\n/**\n * Return the API with the provided apiId. Can also provide the special strings \"FIRST\" or \"ANY\" to get the first API returned. Can select the api returned as a side-effect.\n * \n * @param {String} apiId   An apiId or the special strings 'FIRST' or 'ANY'. 'FIRST' and 'ANY' both return the first api encountered.\n * @param {Boolean} [selectIt=false]   If true, sets the found API as the current 'selected' API.\n */\nexport function getApi(apiId, selectIt = false) {\n  return updateUsagePlansAndApisList()\n    .then(() => {\n      let thisApi\n\n      let allApis = [].concat(store.apiList.apiGateway, store.apiList.generic)\n  \n      if (allApis.length) {\n        if (apiId === 'ANY' || apiId === 'FIRST') {\n          thisApi = allApis[0]\n        }\n\n        else {\n          thisApi = allApis.find(api => api.id.toString() === apiId)\n        }\n      }\n\n      if (selectIt) store.api = thisApi\n\n      return thisApi\n    })\n}\n\n/* Subscription Utils */\n\n/**\n * Fetch and update subscriptions store. Uses caching to determine if it should actually fetch or return the stored result.\n * \n * @param {Boolean} [bustCache=false]   Ignore the cache and re-make the network call. Defaults to false.\n */\nexport function updateSubscriptions(bustCache = false) {\n  let subscriptionsOrPromise = store.subscriptions.length ? store.subscriptions : subscriptionsPromiseCache\n  if (!bustCache && subscriptionsOrPromise) return Promise.resolve(subscriptionsOrPromise)\n\n  return subscriptionsPromiseCache = apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.get('/subscriptions', {}, {}, {}))\n    .then(({ data }) => (store.subscriptions = data))\n}\nlet subscriptionsPromiseCache // WARNING: Don't touch this. Should only be used by updateCatalogAndApisList.\n\nexport function getSubscribedUsagePlan(usagePlanId) {\n  return store.subscriptions.find(sub => sub.id === usagePlanId)\n}\n\nexport function subscribe(usagePlanId) {\n  return apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.put('/subscriptions/' + usagePlanId, {}, {}))\n    .then(() => updateSubscriptions(true))\n}\n\nexport function unsubscribe(usagePlanId) {\n  return apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.delete(`/subscriptions/${usagePlanId}`, {}, {}))\n    .then(() => updateSubscriptions(true))\n}\n\n/**\n * \n * Fetches and updates the apiKey in the store. Both request and response are cached, so unless the cache is busted, this should only ever make one network call.\n * \n */\nexport function updateApiKey(bustCache) {\n  let apiKeyOrPromise = store.apiKey ? store.apiKey : apiKeyPromiseCache\n  if (!bustCache && apiKeyOrPromise) return Promise.resolve(apiKeyOrPromise)\n\n  return apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.get('/apikey', {}, {}, {}))\n    .then(({data}) => (store.apiKey = data.value))\n}\nlet apiKeyPromiseCache\n\nexport function fetchUsage(usagePlanId) {\n  const date = new Date()\n  const start = new Date(date.getFullYear(), date.getMonth(), 1).toJSON().split('T')[0]\n  const end = date.toJSON().split('T')[0]\n  return apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.get('/subscriptions/' + usagePlanId + '/usage', { start, end }, {}))\n}\n\nexport function mapUsageByDate(usage, usedOrRemaining) {\n  const dates = {}\n  Object.keys(usage.items).forEach(apiKeyId => {\n    const apiKeyUsage = mapApiKeyUsageByDate(usage.items[apiKeyId], usage.startDate, usedOrRemaining)\n\n    // handles the bizarre case that the user has more than one api key\n    // currently not possible (and my never be), so we probably don't need it\n    apiKeyUsage.forEach(dailyUsage => {\n      const date = dailyUsage[0]\n      const used = dailyUsage[1]\n      const remaining = dailyUsage[2]\n      \n      if (!dates[date])\n      dates[date] = { used: 0, remaining: 0 }\n\n      dates[date].used += used\n      dates[date].remaining += remaining\n    })\n  })\n  \n  const usageByDate = Object.keys(dates).sort().map(date => [\n    parseInt(date, 10), \n    dates[date].used, \n    dates[date].remaining \n  ])\n  \n  return usageByDate\n}\n\nfunction mapApiKeyUsageByDate(apiKeyUsage, startDate) {\n  const apiKeyDate = new Date(startDate)\n  \n  if (apiKeyUsage && !Array.isArray(apiKeyUsage[0]))\n    apiKeyUsage = [apiKeyUsage]\n  \n  return apiKeyUsage.map((usage) => {\n    const date = apiKeyDate.setDate(apiKeyDate.getDate())\n    const item = [date, ...usage]\n    apiKeyDate.setDate(apiKeyDate.getDate() + 1)\n    return item\n  })\n}\n\n/* Marketplace integration */\n\nexport function confirmMarketplaceSubscription(usagePlanId, token) {\n  if (!usagePlanId) {\n    return\n  }\n  \n  return apiGatewayClient()\n    .then(apiGatewayClient => apiGatewayClient.put('/marketplace-subscriptions/' + usagePlanId, {}, {\"token\" : token}))\n}","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nexport function getQueryString() {\n  const { search: q } = window.location\n\n  if (!q) return {}\n\n  return (/^[?#]/.test(q) ? q.slice(1) : q)\n    .split('&')\n    .reduce((params, param) => {\n      let [ key, value ] = param.split('=');\n      params[key] = value ? decodeURIComponent(value) : '';\n      return params;\n    }, { })\n}\n\nexport function toTitleCase(string) {\n\tlet firstLetter = string[0]\n\tlet allOtherLetters = string.slice(1)\n\n\treturn firstLetter.toUpperCase() + allOtherLetters.toLowerCase()\n}","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\n\nimport { Grid, Header, Popup, Loader, Message, List, Divider } from 'semantic-ui-react'\n\nimport Chart from 'chart.js'\nimport { fetchUsage, mapUsageByDate } from 'services/api-catalog'\nimport { toTitleCase } from 'services/misc'\n\nimport { observer } from 'mobx-react'\n\nimport { store } from 'services/state'\n\nimport _ from 'lodash'\n\nfunction loadUsage(usagePlan, canvasId) {\n  fetchUsage(usagePlan.id)\n    .then((result) => {\n      const data = mapUsageByDate(result.data, 'used')\n      const ctx = document.getElementById(canvasId)\n\n      let oldDataString = JSON.stringify(_.get(usagePlan, 'usage.data', {}))\n      let newDataString = JSON.stringify(data)\n\n      if (oldDataString !== newDataString)\n        usagePlan.usage = { data }\n\n      const labels = data.map(d => new Date(d[0]).toLocaleDateString('en-US', { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' }))\n      const used = data.map(d => d[1])\n      const remaining = data.map(d => d[2])\n      const max = Math.max(...used, ...remaining)\n\n      const chartConfig = {\n        type: 'line',\n        data: {\n          labels,\n          datasets: [\n            {\n              label: `Requests used` + (usagePlan.quota ? ` (per ${toTitleCase(usagePlan.quota.period)})` : ''),\n              data: used,\n              lineTension: 0,\n              backgroundColor: '#00bfff',\n              borderColor: '#00bfff',\n              pointBackgroundColor: 'transparent',\n              pointBorderColor: 'transparent',\n              borderWidth: 2,\n              pointRadius: 10,\n              pointHoverRadius: 10\n\n            },\n            {\n              label: `Remaining requests` + (usagePlan.quota ? ` (per ${toTitleCase(usagePlan.quota.period)})` : ''),\n              data: remaining,\n              lineTension: 0,\n              backgroundColor: 'transparent',\n              borderColor: 'red',\n              pointBackgroundColor: 'transparent',\n              pointBorderColor: 'transparent',\n              borderWidth: 2,\n              pointRadius: 10,\n              pointHoverRadius: 10\n            }\n          ]\n        },\n        options: { \n          scales: { yAxes: [ { ticks: {\n            beginAtZero: true,\n            suggestedMax: max + (max * 0.02)\n          } } ] }\n        }\n      }\n\n      new Chart(ctx, chartConfig)\n    })\n    .catch((error) => {\n      console.error(error)\n      if (!usagePlan.usage)\n        usagePlan.usage = { }\n\n      usagePlan.usage.error = error\n    })\n}\n\nexport default observer(() => {\n  return (\n    <Grid container>\n      <Grid.Row>\n        <Grid.Column style={{ paddingTop: \"40px\" }}>\n          <Header size=\"medium\">API Key</Header>\n          <code style={{\n            background: \"black\",\n            border: \"1px solid gray\",\n            padding: \"7px 8px\",\n            color: \"lightgray\",\n            borderRadius: \"5px\"\n          }}>\n            {store.apiKey}\n          </code>\n        </Grid.Column>\n      </Grid.Row>\n      <Divider />\n      <Grid.Row>\n\n        {store.usagePlans\n          .filter(usagePlan => usagePlan.subscribed && usagePlan.apis.length)\n          .map((usagePlan, index) => {\n            let canvasId = `api-usage-chart-container-${usagePlan.id}` + index\n\n            loadUsage(usagePlan, canvasId)\n\n            return (\n              <Grid.Column width={16} widescreen={8} key={usagePlan.id} style={{ marginBottom: \"40px\" }}>\n                <Title apis={usagePlan.apis} />\n                {usagePlan.throttle && (\n                  <Message info>\n                    <p>\n                      Requests limited to {usagePlan.throttle.rateLimit} per second, and {usagePlan.throttle.burstLimit} in a burst.\n                    </p>\n                  </Message>\n                )}\n                {!usagePlan.usage ? (\n                  <Loader active />\n                ) : (\n                    usagePlan.error ? (\n                      <Message error content={usagePlan.error.toString()} />\n                    ) : null\n                  )}\n                <canvas id={canvasId} />\n              </Grid.Column>\n            )\n          })}\n      </Grid.Row>\n    </Grid>\n  )\n})\n\nconst Title = ({ apis }) => {\n  let firstApiName = apis[0].swagger.info.title\n\n  let apiList = (\n    <List> \n      { apis.reduce((acc, api) => acc.concat(\n        <List.Item key={api.id}>{api.swagger.info.title}</List.Item>\n      ), []) } \n    </List>\n  )\n\n  let extraApiCount = apis.length - 1\n\n  return (\n    <Header size=\"medium\">\n      Usage for {extraApiCount ? (\n        <Popup\n          trigger={ <a style={{ cursor: \"pointer\" }}>{firstApiName} and {extraApiCount} more...</a> }\n          content={ apiList }\n          on={['hover', 'click']}\n          position=\"right center\"\n        />\n      ) : (\n        firstApiName\n      )}\n    </Header>\n  )\n}\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { CognitoUserPool, CognitoUser, AuthenticationDetails } from 'amazon-cognito-identity-js'\n\n// services\nimport { store } from 'services/state'\nimport { updateAllUserData } from 'services/api-catalog'\nimport { initApiGatewayClient, apiGatewayClient, cognitoDomain, cognitoUserPoolId, cognitoClientId, cognitoRegion } from 'services/api'\n\nconst poolData = {\n  UserPoolId: cognitoUserPoolId,\n  ClientId: cognitoClientId\n}\n\nlet userPool\n\nexport function isAuthenticated() {\n  return store.cognitoUser\n}\n\nfunction getCognitoLoginKey() {\n  return `cognito-idp.${cognitoRegion}.amazonaws.com/${cognitoUserPoolId}`\n}\n\nexport function init() {\n  // attempt to refresh credentials from active session\n  userPool = new CognitoUserPool(poolData)\n  store.cognitoUser = userPool.getCurrentUser()\n\n  if (store.cognitoUser !== null) {\n    store.cognitoUser.getSession(function(err, session) {\n      if (err) {\n        logout()\n        console.error(err)\n        return\n      }\n\n      setCredentials(store.cognitoUser)\n    })\n  } else {\n    let signInUserSession = localStorage.getItem(JSON.stringify(poolData))\n    if (signInUserSession) {\n      \n      store.cognitoUser = new CognitoUser({\n        Username: '', // blank user name if we aren't using username and password\n        Pool: userPool\n      })\n\n      store.cognitoUser.signInUserSession = JSON.parse(signInUserSession)\n\n      setCredentials(store.cognitoUser)\n    }\n    initApiGatewayClient()\n  }\n}\n\nexport function register(email, password) {\n  localStorage.clear()\n  const attributeList = []\n  return new Promise((resolve, reject) => {\n    userPool.signUp(email, password, attributeList, null, (err, result) => {\n      if (err) {\n        reject(err)\n      } else {\n        resolve(login(email, password))\n      }\n    })\n  })\n}\n\nexport function login(email, password) {\n  let localCognitoUser = new CognitoUser({\n    Username: email || '', // blank user name if we aren't using username and password\n    Pool: new CognitoUserPool(poolData)\n  })\n\n  if (email && password) {\n    return new Promise((resolve, reject) => {\n      const authenticationDetails = new AuthenticationDetails({\n        Username: email,\n        Password: password\n      })\n\n      localCognitoUser.authenticateUser(authenticationDetails, {\n        onSuccess: (result) => {\n          store.cognitoUser = localCognitoUser\n\n          setCredentials(store.cognitoUser)\n            .then(resolve)\n            .catch(reject)\n        },\n\n        onFailure: reject\n      })\n    })\n  } else if (window.location.hash) { // assume we're grabbing tokens out of the hash\n    // fake the signInUserSession\n    localCognitoUser.signInUserSession = {}\n\n    window.location.hash\n      .replace(/^#/,'')\n      .split('&')\n      .map(param => param.split('='))\n      .forEach(param => {\n        // add real data to the fake signInUserSession\n        if (param[0] === 'id_token')\n          localCognitoUser.signInUserSession.idToken = { jwtToken: param[1] }\n\n        if (param[0] === 'access_token')\n          localCognitoUser.signInUserSession.accessToken = { jwtToken: param[1] }\n\n        // will use this value to auto-log out... eventually\n        // if (param[0] === 'expires_in')\n          // console.log(param[1])\n      })\n\n    if (localCognitoUser.signInUserSession.idToken) {\n      localStorage.setItem(JSON.stringify(poolData), JSON.stringify(localCognitoUser.signInUserSession))\n\n      store.cognitoUser = localCognitoUser\n\n      setCredentials(store.cognitoUser)\n    }\n  }\n}\n\nfunction setCredentials(cognitoUser) {\n    initApiGatewayClient(cognitoUser.signInUserSession.accessToken.jwtToken)\n    updateAllUserData()\n\n    return apiGatewayClient()\n      .then(apiGatewayClient => apiGatewayClient.post('/signin', {}, {}, {}))\n}\n\nexport function logout() {\n  if (store.cognitoUser) {\n    store.cognitoUser.signOut()\n    store.resetUserData()\n    localStorage.clear()\n\n    if (cognitoDomain) {\n      // redirect to cognito to log out there, too\n      window.location = `${cognitoDomain}/logout?client_id=${cognitoClientId}&logout_uri=${window.location.protocol}//${window.location.host}`;\n    }\n  }\n}\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\nimport { Link } from 'react-router-dom'\n\n// semantic-ui\nimport { Menu, Loader } from 'semantic-ui-react'\n\n// store\nimport { observer } from 'mobx-react'\nimport { store } from 'services/state'\n\n// utilities\nimport _ from 'lodash'\n\nfunction isActive (apiId, selectedApiId) {\n  return (selectedApiId) ? apiId === selectedApiId : false\n}\n\nexport default observer(function ApisMenu() {\n  const loadingApis = !store.apiList.loaded\n  const hasGatewayApis = !!_.get(store, 'apiList.apiGateway.length')\n  const hasGenericApis = !!_.get(store, 'apiList.generic.length')\n\n  // either grab the selectedApiId from the path OR\n  // grab it from the first apiGateway api OR\n  // grab it from the first generic api\n  const selectedApiId = (\n    this.props.path.params.apiId ||\n    (hasGatewayApis && store.apiList.apiGateway[0].id) ||\n    (hasGenericApis && store.apiList.generic[0].id)\n  )\n\n  // If we're still loading, display a spinner.\n  // If we're not loading, and we don't have any apis, display a message.\n  // If we're not loading, and we have some apis, render the appropriate api subsections for apiGateway and generic apis \n  return (\n    <Menu inverted vertical attached style={{ margin: 0, borderRadius: 0 }} {...this.props}>\n      {loadingApis ? (\n        <Loader active />\n      ) : (\n        (hasGatewayApis || hasGenericApis) ? (\n          <React.Fragment>\n            {hasGatewayApis && <ApiSubsection title=\"Subscribable\" listOfApis={store.apiList.apiGateway} selectedApiId={selectedApiId} />}\n            {hasGenericApis && <ApiSubsection title=\"Not Subscribable\" listOfApis={store.apiList.generic} selectedApiId={selectedApiId} />}\n          </React.Fragment>\n        ) : (\n          <p style={{ padding: \"13px 16px\", color: \"whitesmoke\" }}>No APIs Published</p>\n        )\n      )}\n    </Menu>\n  )\n})\n\nfunction ApiSubsection({ title, listOfApis, selectedApiId }) {\n  return (\n    <React.Fragment>\n      <Menu.Header\n        style={{\n          padding: \"13px 5px 13px 16px\",\n          color: 'lightsteelblue'\n        }}\n      >\n        {title}\n      </Menu.Header>\n      {listOfApis.map(api => (\n        <Menu.Item\n          key={api.id}\n          as={Link}\n          to={`/apis/${api.id}`}\n          active={isActive(api.id.toString(), selectedApiId.toString())}\n        >\n          {api.swagger.info.title}\n        </Menu.Item>\n      ))}\n    </React.Fragment>\n  )\n}","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\n\n// semantic-ui\nimport { Button, Header, Image, Container } from 'semantic-ui-react'\n\n// services\nimport { subscribe, unsubscribe } from 'services/api-catalog'\nimport { isAuthenticated } from 'services/self'\n\n// state\nimport { observer } from 'mobx-react'\nimport { store } from 'services/state.js'\n\n// Create the plugin that provides our layout component\nexport const SwaggerLayoutPlugin = () => ({ components: { InfoContainer: InfoReplacement } })\n\n// replaces the InfoContainer component\n// https://github.com/swagger-api/swagger-ui/blob/dd3afdc45656bda2a64ae6a7f9bdad006ea98149/src/core/components/layouts/base.jsx\n\nconst InfoReplacement = observer(({ specSelectors }) => {\n  const basePath = specSelectors.basePath()\n  const host = specSelectors.host()\n  const externalDocs = specSelectors.externalDocs()\n\n  return (\n    <Container fluid textAlign='left' className=\"fixfloat\" style={{ padding: \"40px 0px\" }}>\n      <div style={{ display: \"flex\" }}>\n        <div style={{ flex: \"0 0 auto\", marginRight: \"20px\" }}>\n          <Image size='small' src={store.api.logo} />\n        </div>\n        <div>\n          <Header as='h1'>{store.api.swagger.info.title}</Header>\n          <div style={{ display: \"flex\" }}>\n            <div style={{ marginRight: \"20px\" }}>\n              {store.api.generic && (\n                <p style={{ fontWeight: \"bold\" }}>Version</p>\n              )}\n              <p style={{ fontWeight: \"bold\" }}>Endpoint</p>\n              {/* <p style={{ fontWeight: \"bold\" }}>Usage Plan</p> */}\n            </div>\n            <div>\n              {store.api.generic && (\n                <p>{store.api.swagger.info.version}</p>\n              )}\n              <p>https://{host}{basePath}</p>\n              {/* <p>{store.api.usagePlan.name}</p> */}\n            </div>\n          </div>\n          <p>{externalDocs}</p>\n          <SubscriptionButtons />\n        </div>\n      </div>\n    </Container>\n  )\n})\n\nconst SubscriptionButtons = observer(class SubscriptionButtons extends React.Component {\n  state = {}\n\n  render() {\n    const { api } = store\n    return (\n      (api && isAuthenticated()) ? !api.generic ? (\n        api.subscribed ? (\n          <Button onClick={() => unsubscribe(api.usagePlan.id)}>Unsubscribe</Button>\n        ) : (\n          <Button onClick={() => subscribe(api.usagePlan.id)} >Subscribe</Button>\n        )\n      ) : <Header as='h4' color='darkgrey'>This API is not configured for subscription from the portal.</Header> : null\n    )\n  }\n})\n\n\nexport default SwaggerLayoutPlugin","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\n\n// swagger-ui\nimport SwaggerUI from 'swagger-ui'\nimport 'swagger-ui/dist/swagger-ui.css'\n\n// semantic-ui\nimport { Container, Header, Icon } from 'semantic-ui-react'\n\n// services\nimport { getApi } from 'services/api-catalog'\nimport { isAuthenticated } from 'services/self'\n\n// components\nimport ApisMenu from 'components/ApisMenu'\nimport SwaggerLayoutPlugin from 'components/SwaggerUiLayout'\n\n// state\nimport { store } from 'services/state.js'\nimport { observer } from 'mobx-react'\n\nexport default observer(class ApisPage extends React.Component {\n  componentDidMount() { this.updateApi() }\n  componentDidUpdate() { this.updateApi() }\n\n  updateApi = () => {\n    getApi(this.props.match.params.apiId || 'ANY', true)\n      .then(api => {\n        if (api) {\n          let swaggerUiConfig = {\n            dom_id: '#swagger-ui-container',\n            plugins: [SwaggerLayoutPlugin],\n            supportedSubmitMethods: [],\n            spec: api.swagger,\n            onComplete: () => {\n              if (store.apiKey)\n                uiHandler.preauthorizeApiKey(\"api_key\", store.apiKey)\n            }\n          }\n          if (isAuthenticated()) {\n            delete swaggerUiConfig.supportedSubmitMethods\n          }\n          let uiHandler = SwaggerUI(swaggerUiConfig)\n        }\n      })\n  }\n\n  render() {\n    let errorHeader\n    let errorBody \n\n    if (!store.apiList.apiGateway.length && !store.apiList.generic.length) {\n      errorHeader = `No APIs Published`\n      errorBody = `Your administrator hasn't added any APIs to your account. Please contact them to publish an API.`\n    } else if (!store.api) {\n      errorHeader = `No Such API`\n      errorBody = `The selected API doesn't exist.`\n    }\n\n    return (\n      <div style={{ display: \"flex\", flex: \"1 1 auto\", overflow: \"hidden\" }}>\n        <ApisMenu path={this.props.match} style={{ flex: \"0 0 auto\" }} />\n        <div className=\"swagger-section\" style={{ flex: \"1 1 auto\", overflow: 'auto' }}>\n          <div className=\"swagger-ui-wrap\" id=\"swagger-ui-container\" style={{ padding: \"0 20px\" }}>\n            {errorHeader && errorBody && (\n              <React.Fragment>\n                <Header as='h2' icon textAlign=\"center\" style={{ padding: \"40px 0px\" }}>\n                  <Icon name='warning sign' circular />\n                  <Header.Content>{errorHeader}</Header.Content>\n                </Header>\n                <Container text textAlign='justified'>\n                  <p>{errorBody}</p>\n                </Container>\n              </React.Fragment>\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n})\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\nimport { Message } from 'semantic-ui-react'\n\nexport default class AlertPopup extends React.Component {\n  state = {\n    isVisible: false,\n    message: ''\n  }\n\n  handleDismiss = () => {\n    this.setState({ isVisible: false })\n  }\n\n  render() {\n      return (\n        <Message\n          hidden={!this.state.isVisible}\n          negative\n          floating\n          icon='warning sign'\n          onDismiss={this.handleDismiss}\n          header='Error'\n          content={this.state.message}\n        />\n      )\n  }\n}\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\nimport { Button, Popup } from 'semantic-ui-react'\nimport { Redirect } from 'react-router-dom'\nimport { login } from 'services/self'\nimport { confirmMarketplaceSubscription } from 'services/api-catalog'\n\nimport { cognitoDomain, cognitoClientId, cognitoAdminDomain, cognitoAdminClientId } from '../services/api'\n\nexport default class SignIn extends React.Component {\n  redirectUri = `${window.location.protocol}//${window.location.host}/login`\n\n  userSignIn = () => {\n    window.location = `${cognitoDomain}/login?response_type=token&client_id=${cognitoClientId}&redirect_uri=${this.redirectUri}`\n  }\n\n  adminSignIn = () => {\n    window.location = `${cognitoAdminDomain}/login?response_type=token&client_id=${cognitoAdminClientId}&redirect_uri=${this.redirectUri}`\n  }\n\n  render() {\n    return this.props.signedIn ? <Redirect to='/apis' /> : (\n      <Popup\n        inverted\n        wide\n        trigger={ this.props.trigger }\n        content={\n          <div>\n            <Button.Group>\n              <Button size='small' onClick={this.adminSignIn}>Admin</Button>\n              <Button.Or />\n              <Button primary size='small' onClick={this.userSignIn}>User</Button>\n            </Button.Group>\n          </div>\n        }\n        on='click'\n        position='bottom right'\n      />)\n  }\n}\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\nimport { Menu } from 'semantic-ui-react'\nimport { Redirect } from 'react-router-dom'\nimport { register } from 'services/self'\nimport { confirmMarketplaceSubscription } from 'services/api-catalog'\n\nimport { cognitoDomain, cognitoClientId, cognitoAdminDomain, cognitoAdminClientId } from '../services/api'\n\nexport default class Register extends React.Component {\n  redirectUri = `${window.location.protocol}//${window.location.host}/login`\n\n  render() {\n    return this.props.signedIn ? <Redirect to='/apis'/> : (\n        <Menu.Item key=\"register\" as=\"a\"\n                   href={`${cognitoDomain}/signup?response_type=token&client_id=${cognitoClientId}&redirect_uri=${this.redirectUri}`}>Register</Menu.Item>)\n    }\n}\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Menu, Image } from 'semantic-ui-react'\n\nimport { isAuthenticated, logout } from 'services/self'\n\n// mobx\nimport { observer } from 'mobx-react'\n\n// fragments\nimport { fragments } from 'services/get-fragments'\n\n// components\nimport SignIn from './SignIn'\nimport Register from './Register'\n\nexport const NavBar = observer(\n  class NavBar extends React.Component {\n    insertAuthMenu(authenticated) {\n      if (authenticated) {\n        return (\n          <Menu.Menu position=\"right\">\n            <Menu.Item key=\"signout\" as=\"a\" onClick={logout}>Sign Out</Menu.Item>\n            <Menu.Item key=\"dashboard\" as={Link} to=\"/dashboard\">My Dashboard</Menu.Item>\n          </Menu.Menu>\n        )\n      } else {\n          return (\n            <Menu.Menu position=\"right\">\n              <SignIn\n                  key=\"signin\"\n                  trigger={<Menu.Item as=\"a\">Sign In</Menu.Item>} />\n              <Register/>\n            </Menu.Menu>\n          )\n      }\n    }\n\n    render() {\n      return <Menu inverted borderless attached style={{ flex: \"0 0 auto\" }}>\n        <Menu.Item as={Link} to=\"/\">\n          <Image size='mini' src=\"/custom-content/nav-logo.png\" style={{ paddingRight: \"10px\" }} />\n          {fragments.Home.title}\n        </Menu.Item>\n\n        <Menu.Item as={Link} to=\"/getting-started\">{fragments.GettingStarted.title}</Menu.Item>\n        <Menu.Item as={Link} to=\"/apis\">{fragments.APIs.title}</Menu.Item>\n\n        {this.insertAuthMenu(isAuthenticated())}\n      </Menu>\n    }\n  }\n)\n\nexport default NavBar\n","// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\n\n// content-fragments (import here to start this ASAP)\nimport 'services/get-fragments'\n\n// semantic-ui\nimport 'semantic-ui-css/semantic.css'\n\n// pages\nimport Home from 'pages/Home'\nimport GettingStarted from 'pages/GettingStarted'\nimport Dashboard from 'pages/Dashboard'\nimport Apis from 'pages/Apis'\n\n// components\nimport AlertPopup from 'components/AlertPopup'\nimport NavBar from 'components/NavBar'\n\nimport { init, login, logout } from 'services/self'\nimport './index.css';\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    init()\n\n    // We are using an S3 redirect rule to prefix the url path with #!\n    // This then converts it back to a URL path for React routing\n    if (window.location.hash && window.location.hash[1] === '!') {\n      const hashRoute = window.location.hash.substring(2)\n      window.history.pushState({}, 'home page', hashRoute)\n    }\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <React.Fragment>\n          <NavBar />\n          <AlertPopup />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/getting-started\" component={GettingStarted} />\n            <Route path=\"/dashboard\" component={Dashboard} />\n            <Route exact path=\"/apis\" component={Apis} />\n            <Route path=\"/apis/:apiId\" component={Apis} />\n            <Route path=\"/login\" render={() => (login(), <Redirect to=\"/\" />)}/>\n            <Route path=\"/logout\" render={() => (logout(), <Redirect to=\"/\" />)}/>\n            <Route component={() => <h2>Page not found</h2>} />\n          </Switch>\n        </React.Fragment>\n      </BrowserRouter>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}